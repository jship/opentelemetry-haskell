-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | STUB
--   
--   <tt>otel-api-common</tt> STUB
@package otel-api-common
@version 0.0.0

module OTel.API.Common.Internal
class KV (kv :: Type) where {
    type KVConstraints kv :: Type -> Type -> Constraint;
}
(.@) :: (KV kv, KVConstraints kv from to) => Key to -> from -> kv
infixr 8 .@
class (k ~ Text, v ~ Text) => IsTextKV k v
newtype Key a
Key :: Text -> Key a
[unKey] :: Key a -> Text
newtype Timestamp
Timestamp :: Integer -> Timestamp

-- | nanoseconds
[unTimestamp] :: Timestamp -> Integer
timestampFromNanoseconds :: Integer -> Timestamp
timestampToNanoseconds :: Timestamp -> Integer
data TimestampSource
TimestampSourceNow :: TimestampSource
TimestampSourceAt :: Timestamp -> TimestampSource
data InstrumentationScope
InstrumentationScope :: InstrumentationScopeName -> Maybe Version -> Maybe SchemaURL -> InstrumentationScope
[instrumentationScopeName] :: InstrumentationScope -> InstrumentationScopeName
[instrumentationScopeVersion] :: InstrumentationScope -> Maybe Version
[instrumentationScopeSchemaURL] :: InstrumentationScope -> Maybe SchemaURL
defaultInstrumentationScope :: InstrumentationScope
newtype InstrumentationScopeName
InstrumentationScopeName :: Text -> InstrumentationScopeName
[unInstrumentationScopeName] :: InstrumentationScopeName -> Text
newtype Version
Version :: Text -> Version
[unVersion] :: Version -> Text
newtype SchemaURL
SchemaURL :: Text -> SchemaURL
[unSchemaURL] :: SchemaURL -> Text
schemaURLFromText :: Text -> Either Text SchemaURL
schemaURLToText :: SchemaURL -> Text
class WithAttrs (a :: Type) where {
    type WithAttrsAttrType a :: AttrsFor;
}
(.:@) :: WithAttrs a => a -> AttrsBuilder (WithAttrsAttrType a) -> a
infixr 6 .:@
data Attrs (af :: AttrsFor)
Attrs :: HashMap Text SomeAttr -> Int -> Attrs (af :: AttrsFor)
[attrsMap] :: Attrs (af :: AttrsFor) -> HashMap Text SomeAttr
[attrsDropped] :: Attrs (af :: AttrsFor) -> Int
emptyAttrs :: Attrs af
nullAttrs :: Attrs af -> Bool
sizeAttrs :: Attrs af -> Int
memberAttrs :: Key a -> Attrs af -> Bool
lookupAttrs :: forall a af. KnownAttrType a => Key a -> Attrs af -> Maybe (Attr a)
foldMapWithKeyAttrs :: forall m af. Monoid m => (forall a. Key a -> Attr a -> m) -> Attrs af -> m
filterWithKeyAttrs :: forall af. (forall a. Key a -> Attr a -> Bool) -> Attrs af -> Attrs af
mapWithKeyAttrs :: forall af. (forall a. Key a -> Attr a -> Attr a) -> Attrs af -> Attrs af

-- | Equivalent to <a>mapWithKeyAttrs</a> but allows for changing both the
--   type and value of each attribute rather than just the value of the
--   attribute.
convertWithKeyAttrs :: forall af. (forall a. Key a -> Attr a -> SomeAttr) -> Attrs af -> Attrs af
droppedAttrsCount :: Attrs af -> Int
newtype AttrsBuilder (af :: AttrsFor)
AttrsBuilder :: (Int -> DList AttrsBuilderElem) -> AttrsBuilder (af :: AttrsFor)
[unAttrsBuilder] :: AttrsBuilder (af :: AttrsFor) -> Int -> DList AttrsBuilderElem
runAttrsBuilder :: AttrsBuilder af -> AttrsLimits af -> Attrs af
jsonAttrs :: forall a af. ToJSON a => Text -> a -> AttrsBuilder af
data AttrsAcc
AttrsAcc :: HashMap Text SomeAttr -> Int -> Int -> AttrsAcc
[attrsAccMap] :: AttrsAcc -> HashMap Text SomeAttr
[attrsAccMapSize] :: AttrsAcc -> Int
[attrsAccDropped] :: AttrsAcc -> Int
data AttrsBuilderElem
AttrsBuilderElem :: Text -> SomeAttr -> AttrsBuilderElem
[attrsBuilderElemKey] :: AttrsBuilderElem -> Text
[attrsBuilderElemVal] :: AttrsBuilderElem -> SomeAttr
data AttrsFor
AttrsForResource :: AttrsFor
AttrsForSpan :: AttrsFor
AttrsForSpanEvent :: AttrsFor
AttrsForSpanLink :: AttrsFor
data AttrsLimits (af :: AttrsFor)
AttrsLimits :: Maybe Int -> Maybe Int -> AttrsLimits (af :: AttrsFor)
[attrsLimitsCount] :: AttrsLimits (af :: AttrsFor) -> Maybe Int
[attrsLimitsValueLength] :: AttrsLimits (af :: AttrsFor) -> Maybe Int
defaultAttrsLimits :: AttrsLimits af
data SomeAttr
[SomeAttr] :: Attr a -> SomeAttr
data Attr a
Attr :: AttrType a -> a -> Attr a
[attrType] :: Attr a -> AttrType a
[attrVal] :: Attr a -> a

-- | Convert an attribute to a text attribute.
--   
--   This function is identity if the attribute already is a text
--   attribute. Otherwise, the attribute value is passed to <a>show</a>.
asTextAttr :: Attr a -> Attr Text
newtype AttrVals a
AttrVals :: Vector a -> AttrVals a
[unAttrVals] :: AttrVals a -> Vector a
data AttrType (a :: Type)
[AttrTypeText] :: AttrType Text
[AttrTypeBool] :: AttrType Bool
[AttrTypeDouble] :: AttrType Double
[AttrTypeInt] :: AttrType Int64
[AttrTypeTextArray] :: AttrType (AttrVals Text)
[AttrTypeBoolArray] :: AttrType (AttrVals Bool)
[AttrTypeDoubleArray] :: AttrType (AttrVals Double)
[AttrTypeIntArray] :: AttrType (AttrVals Int64)
class KnownAttrType a
attrTypeVal :: KnownAttrType a => Proxy a -> AttrType a
class (KnownAttrType to) => ToAttrVal from to | from -> to
toAttrVal :: ToAttrVal from to => from -> to
with :: a -> (a -> b) -> b
newtype OnException a
OnException :: (SomeException -> [SeriesElem] -> LoggingT IO a) -> OnException a
[runOnException] :: OnException a -> SomeException -> [SeriesElem] -> LoggingT IO a
askException :: OnException SomeException
askExceptionMetadata :: OnException [SeriesElem]
newtype OnTimeout a
OnTimeout :: (Int -> [SeriesElem] -> LoggingT IO a) -> OnTimeout a
[runOnTimeout] :: OnTimeout a -> Int -> [SeriesElem] -> LoggingT IO a
askTimeoutMicros :: OnTimeout Int
askTimeoutMetadata :: OnTimeout [SeriesElem]
data BufferedLoggerSpec
BufferedLoggerSpec :: (Loc -> LogSource -> LogLevel -> LogStr -> Bool) -> Logger -> Int -> Int -> (BufferedLogs -> OnTimeout ()) -> (BufferedLog -> BufferedLogAgg -> OnException ()) -> Logger -> (BufferedLog -> BufferedLogAgg -> [SeriesElem] -> LogStr) -> BufferedLoggerSpec

-- | Predicate that determines if a log message should be buffered. The
--   default is no buffering, so all log messages are logged immediately.
[bufferedLoggerSpecShouldBuffer] :: BufferedLoggerSpec -> Loc -> LogSource -> LogLevel -> LogStr -> Bool

-- | The logger to wrap. For all unbuffered log messages, these are passed
--   to <a>bufferedLoggerSpecLogger</a> immediately. For buffered log
--   messages, aggregates will eventually be passed to
--   <a>bufferedLoggerSpecLogger</a> on the configured period (see
--   <a>bufferedLoggerSpecFlushPeriod</a>).
[bufferedLoggerSpecLogger] :: BufferedLoggerSpec -> Logger

-- | Buffered logs are regularly flushed from internal storage on this
--   period (in microseconds). The default is 5 minutes.
[bufferedLoggerSpecFlushPeriod] :: BufferedLoggerSpec -> Int

-- | Max amount of time allowed for flushing buffered logs (in
--   microseconds). The default is 10 seconds.
[bufferedLoggerSpecFlushTimeout] :: BufferedLoggerSpec -> Int

-- | Handler that is run if flushing buffered logs takes longer than
--   <a>bufferedLoggerSpecFlushTimeout</a>. The default is to log the
--   timeout using <a>bufferedLoggerSpecOnFlushExceptionLogger</a>. This
--   may be overridden if the timeout needs to be reported or dealt with
--   via some means other than logging. Note that if the handler throws a
--   synchronous exception, that exception will be caught and ignored.
--   
--   The input argument is all remaining buffered logs that were unable to
--   be flushed within the timeout.
[bufferedLoggerSpecOnFlushTimeout] :: BufferedLoggerSpec -> BufferedLogs -> OnTimeout ()

-- | Handler that is run if a synchronous exception is encountered during
--   log flushing. The default is to log the exception using
--   <a>bufferedLoggerSpecOnFlushExceptionLogger</a>. This may be
--   overridden if the exception needs to be reported or dealt with via
--   some means other than logging. Note that if the handler rethrows the
--   exception, the exception will be caught and ignored.
--   
--   The input arguments are the specific buffered log and aggregate that
--   encountered an exception during flushing.
[bufferedLoggerSpecOnFlushException] :: BufferedLoggerSpec -> BufferedLog -> BufferedLogAgg -> OnException ()

-- | The <a>bufferedLoggerSpecOnFlushTimeout</a> and
--   <a>bufferedLoggerSpecOnFlushException</a> handlers are run using this
--   logger. This logger is intentionally different from
--   <a>bufferedLoggerSpecLogger</a>, as <a>bufferedLoggerSpecLogger</a>
--   may have ultimately been what triggered running either handler in the
--   first place.
[bufferedLoggerSpecOnFlushExceptionLogger] :: BufferedLoggerSpec -> Logger

-- | The internal storage tracks a count of each buffered log message's
--   occurrences (rather than tracking each occurrence) and each
--   occurrence's metadata (convenience for <tt>monad-logger-aeson</tt>
--   users). This function enables including this aggregate info in the log
--   message when it is eventually logged. The default is to not include
--   the aggregate info.
--   
--   <tt>monad-logger-aeson</tt> users may find it convenient to set this
--   function to <tt>includeLogAggregateViaAeson Just</tt>. This will
--   include the aggregate in full. If there is a risk that a buffered
--   log's aggregated metadata may exceed a logging system's max payload
--   per message, <a>Just</a> can be replaced with a function that more
--   carefully summarizes the metadata. For example, to ignore the metadata
--   altogether and instead only log the count of aggregated messages, the
--   following could be used:
--   
--   <pre>
--   <a>includeLogAggregateViaAeson</a> \bufferedLogAgg -&gt;
--     <a>Just</a> $ <a>object</a> ["count" <a>.=</a> <a>bufferedLogAggCount</a> bufferedLogAgg]
--   </pre>
[bufferedLoggerSpecIncludeLogAggregate] :: BufferedLoggerSpec -> BufferedLog -> BufferedLogAgg -> [SeriesElem] -> LogStr
defaultBufferedLoggerSpec :: BufferedLoggerSpec
includeLogAggregateViaAeson :: forall a. ToJSON a => (BufferedLogAgg -> Maybe a) -> BufferedLog -> BufferedLogAgg -> [SeriesElem] -> LogStr
withBufferedLogger :: forall m a. MonadUnliftIO m => BufferedLoggerSpec -> (Logger -> m a) -> m a
withBufferedLoggerIO :: forall a. BufferedLoggerSpec -> (Logger -> IO a) -> IO a
type BufferedLogs = HashMap BufferedLog BufferedLogAgg
insertBufferedLog :: BufferedLog -> KeyMap Value -> BufferedLogs -> BufferedLogs
insertBufferedLogWithAgg :: BufferedLog -> BufferedLogAgg -> BufferedLogs -> BufferedLogs
data BufferedLog
BufferedLog :: Loc -> LogSource -> LogLevel -> Either ByteString Text -> BufferedLog
[bufferedLogLoc] :: BufferedLog -> Loc
[bufferedLogLogSource] :: BufferedLog -> LogSource
[bufferedLogLogLevel] :: BufferedLog -> LogLevel

-- | <a>Right</a> when the log message was parsed as a <a>Message</a>,
--   <a>Left</a> otherwise.
[bufferedLogLogStr] :: BufferedLog -> Either ByteString Text
toBufferedLog :: Loc -> LogSource -> LogLevel -> LogStr -> (BufferedLog, KeyMap Value)
data BufferedLogAgg
BufferedLogAgg :: Int -> DList (KeyMap Value) -> BufferedLogAgg
[bufferedLogAggCount] :: BufferedLogAgg -> Int
[bufferedLogAggMetas] :: BufferedLogAgg -> DList (KeyMap Value)
type Logger = Loc -> LogSource -> LogLevel -> LogStr -> IO ()
instance GHC.Show.Show (OTel.API.Common.Internal.Key a)
instance GHC.Classes.Ord (OTel.API.Common.Internal.Key a)
instance GHC.Classes.Eq (OTel.API.Common.Internal.Key a)
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Common.Internal.Timestamp
instance GHC.Show.Show OTel.API.Common.Internal.Timestamp
instance GHC.Classes.Eq OTel.API.Common.Internal.Timestamp
instance GHC.Show.Show OTel.API.Common.Internal.TimestampSource
instance GHC.Classes.Eq OTel.API.Common.Internal.TimestampSource
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Common.Internal.InstrumentationScopeName
instance GHC.Show.Show OTel.API.Common.Internal.InstrumentationScopeName
instance GHC.Classes.Ord OTel.API.Common.Internal.InstrumentationScopeName
instance GHC.Classes.Eq OTel.API.Common.Internal.InstrumentationScopeName
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Common.Internal.Version
instance GHC.Show.Show OTel.API.Common.Internal.Version
instance GHC.Classes.Ord OTel.API.Common.Internal.Version
instance GHC.Classes.Eq OTel.API.Common.Internal.Version
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Common.Internal.SchemaURL
instance Data.Hashable.Class.Hashable OTel.API.Common.Internal.SchemaURL
instance GHC.Show.Show OTel.API.Common.Internal.SchemaURL
instance GHC.Classes.Ord OTel.API.Common.Internal.SchemaURL
instance GHC.Classes.Eq OTel.API.Common.Internal.SchemaURL
instance GHC.Show.Show OTel.API.Common.Internal.InstrumentationScope
instance GHC.Classes.Ord OTel.API.Common.Internal.InstrumentationScope
instance GHC.Classes.Eq OTel.API.Common.Internal.InstrumentationScope
instance GHC.Base.Monad OTel.API.Common.Internal.AttrVals
instance GHC.Base.Applicative OTel.API.Common.Internal.AttrVals
instance GHC.Base.Functor OTel.API.Common.Internal.AttrVals
instance Data.Foldable.Foldable OTel.API.Common.Internal.AttrVals
instance Data.Aeson.Types.ToJSON.ToJSON a => Data.Aeson.Types.ToJSON.ToJSON (OTel.API.Common.Internal.AttrVals a)
instance GHC.Show.Show a => GHC.Show.Show (OTel.API.Common.Internal.AttrVals a)
instance GHC.Base.Semigroup (OTel.API.Common.Internal.AttrVals a)
instance GHC.Base.Monoid (OTel.API.Common.Internal.AttrVals a)
instance GHC.Classes.Eq a => GHC.Classes.Eq (OTel.API.Common.Internal.AttrVals a)
instance GHC.Show.Show a => GHC.Show.Show (OTel.API.Common.Internal.Attr a)
instance GHC.Classes.Eq a => GHC.Classes.Eq (OTel.API.Common.Internal.Attr a)
instance GHC.Base.Monoid (OTel.API.Common.Internal.AttrsBuilder af)
instance GHC.Base.Semigroup (OTel.API.Common.Internal.AttrsBuilder af)
instance GHC.Show.Show (OTel.API.Common.Internal.Attrs af)
instance GHC.Classes.Eq (OTel.API.Common.Internal.Attrs af)
instance GHC.Base.Monoid a => GHC.Base.Monoid (OTel.API.Common.Internal.OnException a)
instance GHC.Base.Semigroup a => GHC.Base.Semigroup (OTel.API.Common.Internal.OnException a)
instance Control.Monad.Logger.MonadLoggerIO OTel.API.Common.Internal.OnException
instance Control.Monad.Logger.MonadLogger OTel.API.Common.Internal.OnException
instance Control.Monad.IO.Unlift.MonadUnliftIO OTel.API.Common.Internal.OnException
instance Control.Monad.Catch.MonadThrow OTel.API.Common.Internal.OnException
instance Control.Monad.Catch.MonadMask OTel.API.Common.Internal.OnException
instance Control.Monad.Catch.MonadCatch OTel.API.Common.Internal.OnException
instance Control.Monad.IO.Class.MonadIO OTel.API.Common.Internal.OnException
instance GHC.Base.Monad OTel.API.Common.Internal.OnException
instance GHC.Base.Functor OTel.API.Common.Internal.OnException
instance GHC.Base.Applicative OTel.API.Common.Internal.OnException
instance GHC.Base.Monoid a => GHC.Base.Monoid (OTel.API.Common.Internal.OnTimeout a)
instance GHC.Base.Semigroup a => GHC.Base.Semigroup (OTel.API.Common.Internal.OnTimeout a)
instance Control.Monad.Logger.MonadLoggerIO OTel.API.Common.Internal.OnTimeout
instance Control.Monad.Logger.MonadLogger OTel.API.Common.Internal.OnTimeout
instance Control.Monad.IO.Unlift.MonadUnliftIO OTel.API.Common.Internal.OnTimeout
instance Control.Monad.Catch.MonadThrow OTel.API.Common.Internal.OnTimeout
instance Control.Monad.Catch.MonadMask OTel.API.Common.Internal.OnTimeout
instance Control.Monad.Catch.MonadCatch OTel.API.Common.Internal.OnTimeout
instance Control.Monad.IO.Class.MonadIO OTel.API.Common.Internal.OnTimeout
instance GHC.Base.Monad OTel.API.Common.Internal.OnTimeout
instance GHC.Base.Functor OTel.API.Common.Internal.OnTimeout
instance GHC.Base.Applicative OTel.API.Common.Internal.OnTimeout
instance GHC.Classes.Eq OTel.API.Common.Internal.BufferedLog
instance GHC.Classes.Eq OTel.API.Common.Internal.BufferedLogAgg
instance GHC.Classes.Eq a => GHC.Classes.Eq (OTel.API.Common.Internal.AttrType a)
instance GHC.Show.Show a => GHC.Show.Show (OTel.API.Common.Internal.AttrType a)
instance GHC.Base.Semigroup OTel.API.Common.Internal.BufferedLogAgg
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Common.Internal.BufferedLogAgg
instance Data.Hashable.Class.Hashable OTel.API.Common.Internal.BufferedLog
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Common.Internal.BufferedLog
instance OTel.API.Common.Internal.KV (OTel.API.Common.Internal.AttrsBuilder af)
instance OTel.API.Common.Internal.ToAttrVal Data.Text.Internal.Text Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal Data.Text.Internal.Lazy.Text Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal GHC.Base.String Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal GHC.Types.Bool GHC.Types.Bool
instance OTel.API.Common.Internal.ToAttrVal GHC.Types.Double GHC.Types.Double
instance OTel.API.Common.Internal.ToAttrVal GHC.Types.Float GHC.Types.Double
instance OTel.API.Common.Internal.ToAttrVal GHC.Real.Rational GHC.Types.Double
instance OTel.API.Common.Internal.ToAttrVal GHC.Types.Int GHC.Int.Int64
instance OTel.API.Common.Internal.ToAttrVal GHC.Int.Int8 GHC.Int.Int64
instance OTel.API.Common.Internal.ToAttrVal GHC.Int.Int16 GHC.Int.Int64
instance OTel.API.Common.Internal.ToAttrVal GHC.Int.Int32 GHC.Int.Int64
instance OTel.API.Common.Internal.ToAttrVal GHC.Int.Int64 GHC.Int.Int64
instance OTel.API.Common.Internal.ToAttrVal GHC.Word.Word8 GHC.Int.Int64
instance OTel.API.Common.Internal.ToAttrVal GHC.Word.Word16 GHC.Int.Int64
instance OTel.API.Common.Internal.ToAttrVal GHC.Word.Word32 GHC.Int.Int64
instance OTel.API.Common.Internal.ToAttrVal (OTel.API.Common.Internal.AttrVals Data.Text.Internal.Text) (OTel.API.Common.Internal.AttrVals Data.Text.Internal.Text)
instance OTel.API.Common.Internal.ToAttrVal [Data.Text.Internal.Text] (OTel.API.Common.Internal.AttrVals Data.Text.Internal.Text)
instance OTel.API.Common.Internal.ToAttrVal (Data.Sequence.Internal.Seq Data.Text.Internal.Text) (OTel.API.Common.Internal.AttrVals Data.Text.Internal.Text)
instance OTel.API.Common.Internal.ToAttrVal (Data.Vector.Vector Data.Text.Internal.Text) (OTel.API.Common.Internal.AttrVals Data.Text.Internal.Text)
instance OTel.API.Common.Internal.ToAttrVal (OTel.API.Common.Internal.AttrVals Data.Text.Internal.Lazy.Text) (OTel.API.Common.Internal.AttrVals Data.Text.Internal.Text)
instance OTel.API.Common.Internal.ToAttrVal [Data.Text.Internal.Lazy.Text] (OTel.API.Common.Internal.AttrVals Data.Text.Internal.Text)
instance OTel.API.Common.Internal.ToAttrVal (Data.Sequence.Internal.Seq Data.Text.Internal.Lazy.Text) (OTel.API.Common.Internal.AttrVals Data.Text.Internal.Text)
instance OTel.API.Common.Internal.ToAttrVal (Data.Vector.Vector Data.Text.Internal.Lazy.Text) (OTel.API.Common.Internal.AttrVals Data.Text.Internal.Text)
instance OTel.API.Common.Internal.ToAttrVal (OTel.API.Common.Internal.AttrVals GHC.Base.String) (OTel.API.Common.Internal.AttrVals Data.Text.Internal.Text)
instance OTel.API.Common.Internal.ToAttrVal [GHC.Base.String] (OTel.API.Common.Internal.AttrVals Data.Text.Internal.Text)
instance OTel.API.Common.Internal.ToAttrVal (Data.Sequence.Internal.Seq GHC.Base.String) (OTel.API.Common.Internal.AttrVals Data.Text.Internal.Text)
instance OTel.API.Common.Internal.ToAttrVal (Data.Vector.Vector GHC.Base.String) (OTel.API.Common.Internal.AttrVals Data.Text.Internal.Text)
instance OTel.API.Common.Internal.ToAttrVal (OTel.API.Common.Internal.AttrVals GHC.Types.Bool) (OTel.API.Common.Internal.AttrVals GHC.Types.Bool)
instance OTel.API.Common.Internal.ToAttrVal [GHC.Types.Bool] (OTel.API.Common.Internal.AttrVals GHC.Types.Bool)
instance OTel.API.Common.Internal.ToAttrVal (Data.Sequence.Internal.Seq GHC.Types.Bool) (OTel.API.Common.Internal.AttrVals GHC.Types.Bool)
instance OTel.API.Common.Internal.ToAttrVal (Data.Vector.Vector GHC.Types.Bool) (OTel.API.Common.Internal.AttrVals GHC.Types.Bool)
instance OTel.API.Common.Internal.ToAttrVal (OTel.API.Common.Internal.AttrVals GHC.Types.Double) (OTel.API.Common.Internal.AttrVals GHC.Types.Double)
instance OTel.API.Common.Internal.ToAttrVal [GHC.Types.Double] (OTel.API.Common.Internal.AttrVals GHC.Types.Double)
instance OTel.API.Common.Internal.ToAttrVal (Data.Sequence.Internal.Seq GHC.Types.Double) (OTel.API.Common.Internal.AttrVals GHC.Types.Double)
instance OTel.API.Common.Internal.ToAttrVal (Data.Vector.Vector GHC.Types.Double) (OTel.API.Common.Internal.AttrVals GHC.Types.Double)
instance OTel.API.Common.Internal.ToAttrVal (OTel.API.Common.Internal.AttrVals GHC.Types.Float) (OTel.API.Common.Internal.AttrVals GHC.Types.Double)
instance OTel.API.Common.Internal.ToAttrVal [GHC.Types.Float] (OTel.API.Common.Internal.AttrVals GHC.Types.Double)
instance OTel.API.Common.Internal.ToAttrVal (Data.Sequence.Internal.Seq GHC.Types.Float) (OTel.API.Common.Internal.AttrVals GHC.Types.Double)
instance OTel.API.Common.Internal.ToAttrVal (Data.Vector.Vector GHC.Types.Float) (OTel.API.Common.Internal.AttrVals GHC.Types.Double)
instance OTel.API.Common.Internal.ToAttrVal (OTel.API.Common.Internal.AttrVals GHC.Real.Rational) (OTel.API.Common.Internal.AttrVals GHC.Types.Double)
instance OTel.API.Common.Internal.ToAttrVal [GHC.Real.Rational] (OTel.API.Common.Internal.AttrVals GHC.Types.Double)
instance OTel.API.Common.Internal.ToAttrVal (Data.Sequence.Internal.Seq GHC.Real.Rational) (OTel.API.Common.Internal.AttrVals GHC.Types.Double)
instance OTel.API.Common.Internal.ToAttrVal (Data.Vector.Vector GHC.Real.Rational) (OTel.API.Common.Internal.AttrVals GHC.Types.Double)
instance OTel.API.Common.Internal.ToAttrVal (OTel.API.Common.Internal.AttrVals GHC.Types.Int) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal [GHC.Types.Int] (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Sequence.Internal.Seq GHC.Types.Int) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Vector.Vector GHC.Types.Int) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (OTel.API.Common.Internal.AttrVals GHC.Int.Int8) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal [GHC.Int.Int8] (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Sequence.Internal.Seq GHC.Int.Int8) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Vector.Vector GHC.Int.Int8) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (OTel.API.Common.Internal.AttrVals GHC.Int.Int16) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal [GHC.Int.Int16] (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Sequence.Internal.Seq GHC.Int.Int16) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Vector.Vector GHC.Int.Int16) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (OTel.API.Common.Internal.AttrVals GHC.Int.Int32) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal [GHC.Int.Int32] (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Sequence.Internal.Seq GHC.Int.Int32) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Vector.Vector GHC.Int.Int32) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (OTel.API.Common.Internal.AttrVals GHC.Int.Int64) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal [GHC.Int.Int64] (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Sequence.Internal.Seq GHC.Int.Int64) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Vector.Vector GHC.Int.Int64) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (OTel.API.Common.Internal.AttrVals GHC.Word.Word8) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal [GHC.Word.Word8] (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Sequence.Internal.Seq GHC.Word.Word8) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Vector.Vector GHC.Word.Word8) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (OTel.API.Common.Internal.AttrVals GHC.Word.Word16) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal [GHC.Word.Word16] (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Sequence.Internal.Seq GHC.Word.Word16) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Vector.Vector GHC.Word.Word16) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (OTel.API.Common.Internal.AttrVals GHC.Word.Word32) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal [GHC.Word.Word32] (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Sequence.Internal.Seq GHC.Word.Word32) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.ToAttrVal (Data.Vector.Vector GHC.Word.Word32) (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance OTel.API.Common.Internal.KnownAttrType Data.Text.Internal.Text
instance OTel.API.Common.Internal.KnownAttrType GHC.Types.Bool
instance OTel.API.Common.Internal.KnownAttrType GHC.Types.Double
instance OTel.API.Common.Internal.KnownAttrType GHC.Int.Int64
instance OTel.API.Common.Internal.KnownAttrType (OTel.API.Common.Internal.AttrVals Data.Text.Internal.Text)
instance OTel.API.Common.Internal.KnownAttrType (OTel.API.Common.Internal.AttrVals GHC.Types.Bool)
instance OTel.API.Common.Internal.KnownAttrType (OTel.API.Common.Internal.AttrVals GHC.Types.Double)
instance OTel.API.Common.Internal.KnownAttrType (OTel.API.Common.Internal.AttrVals GHC.Int.Int64)
instance Data.Aeson.Types.ToJSON.ToJSON (OTel.API.Common.Internal.Attrs af)
instance GHC.Classes.Eq OTel.API.Common.Internal.SomeAttr
instance GHC.Show.Show OTel.API.Common.Internal.SomeAttr
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Common.Internal.SomeAttr
instance Data.Traversable.Traversable OTel.API.Common.Internal.AttrVals
instance Data.Aeson.Types.ToJSON.ToJSON (OTel.API.Common.Internal.AttrsLimits af)
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Common.Internal.InstrumentationScope
instance Data.String.IsString OTel.API.Common.Internal.InstrumentationScope
instance Data.String.IsString OTel.API.Common.Internal.Version
instance Data.String.IsString OTel.API.Common.Internal.InstrumentationScopeName
instance Data.String.IsString (OTel.API.Common.Internal.Key a)
instance OTel.API.Common.Internal.IsTextKV Data.Text.Internal.Text Data.Text.Internal.Text

module OTel.API.Common.InstrumentationScope
data InstrumentationScope
defaultInstrumentationScope :: InstrumentationScope
instrumentationScopeName :: InstrumentationScope -> InstrumentationScopeName
instrumentationScopeVersion :: InstrumentationScope -> Maybe Version
instrumentationScopeSchemaURL :: InstrumentationScope -> Maybe SchemaURL
newtype InstrumentationScopeName
InstrumentationScopeName :: Text -> InstrumentationScopeName
[unInstrumentationScopeName] :: InstrumentationScopeName -> Text
newtype Version
Version :: Text -> Version
[unVersion] :: Version -> Text
data SchemaURL
schemaURLFromText :: Text -> Either Text SchemaURL
schemaURLToText :: SchemaURL -> Text

module OTel.API.Common.Handlers.OnTimeout
data OnTimeout a
askTimeoutMicros :: OnTimeout Int
askTimeoutMetadata :: OnTimeout [SeriesElem]

module OTel.API.Common.Handlers.OnException
data OnException a
askException :: OnException SomeException
askExceptionMetadata :: OnException [SeriesElem]

module OTel.API.Common.Handlers

module OTel.API.Common.CPS
with :: a -> (a -> b) -> b

module OTel.API.Common.Attributes
data Attrs (af :: AttrsFor)
emptyAttrs :: Attrs af
nullAttrs :: Attrs af -> Bool
sizeAttrs :: Attrs af -> Int
memberAttrs :: Key a -> Attrs af -> Bool
lookupAttrs :: forall a af. KnownAttrType a => Key a -> Attrs af -> Maybe (Attr a)
foldMapWithKeyAttrs :: forall m af. Monoid m => (forall a. Key a -> Attr a -> m) -> Attrs af -> m
filterWithKeyAttrs :: forall af. (forall a. Key a -> Attr a -> Bool) -> Attrs af -> Attrs af
mapWithKeyAttrs :: forall af. (forall a. Key a -> Attr a -> Attr a) -> Attrs af -> Attrs af

-- | Equivalent to <a>mapWithKeyAttrs</a> but allows for changing both the
--   type and value of each attribute rather than just the value of the
--   attribute.
convertWithKeyAttrs :: forall af. (forall a. Key a -> Attr a -> SomeAttr) -> Attrs af -> Attrs af
droppedAttrsCount :: Attrs af -> Int
class WithAttrs (a :: Type) where {
    type WithAttrsAttrType a :: AttrsFor;
}
(.:@) :: WithAttrs a => a -> AttrsBuilder (WithAttrsAttrType a) -> a
infixr 6 .:@
data AttrsBuilder (af :: AttrsFor)
jsonAttrs :: forall a af. ToJSON a => Text -> a -> AttrsBuilder af
data AttrsFor
AttrsForResource :: AttrsFor
AttrsForSpan :: AttrsFor
AttrsForSpanEvent :: AttrsFor
AttrsForSpanLink :: AttrsFor
data AttrsLimits (af :: AttrsFor)
defaultAttrsLimits :: AttrsLimits af
attrsLimitsCount :: AttrsLimits af -> Maybe Int
attrsLimitsValueLength :: AttrsLimits af -> Maybe Int
data SomeAttr
[SomeAttr] :: Attr a -> SomeAttr
data Attr a
Attr :: AttrType a -> a -> Attr a
[attrType] :: Attr a -> AttrType a
[attrVal] :: Attr a -> a

-- | Convert an attribute to a text attribute.
--   
--   This function is identity if the attribute already is a text
--   attribute. Otherwise, the attribute value is passed to <a>show</a>.
asTextAttr :: Attr a -> Attr Text
data AttrVals a
data AttrType (a :: Type)
[AttrTypeText] :: AttrType Text
[AttrTypeBool] :: AttrType Bool
[AttrTypeDouble] :: AttrType Double
[AttrTypeInt] :: AttrType Int64
[AttrTypeTextArray] :: AttrType (AttrVals Text)
[AttrTypeBoolArray] :: AttrType (AttrVals Bool)
[AttrTypeDoubleArray] :: AttrType (AttrVals Double)
[AttrTypeIntArray] :: AttrType (AttrVals Int64)
class KnownAttrType a
attrTypeVal :: KnownAttrType a => Proxy a -> AttrType a
class (KnownAttrType to) => ToAttrVal from to | from -> to
toAttrVal :: ToAttrVal from to => from -> to

module OTel.API.Common.KV
class KV (kv :: Type) where {
    type KVConstraints kv :: Type -> Type -> Constraint;
}
(.@) :: (KV kv, KVConstraints kv from to) => Key to -> from -> kv
infixr 8 .@
class (k ~ Text, v ~ Text) => IsTextKV k v
newtype Key a
Key :: Text -> Key a
[unKey] :: Key a -> Text

module OTel.API.Common.Logging
type Logger = Loc -> LogSource -> LogLevel -> LogStr -> IO ()
withBufferedLogger :: forall m a. MonadUnliftIO m => BufferedLoggerSpec -> (Logger -> m a) -> m a
data BufferedLoggerSpec
defaultBufferedLoggerSpec :: BufferedLoggerSpec

-- | Predicate that determines if a log message should be buffered. The
--   default is no buffering, so all log messages are logged immediately.
bufferedLoggerSpecShouldBuffer :: BufferedLoggerSpec -> Loc -> LogSource -> LogLevel -> LogStr -> Bool

-- | The logger to wrap. For all unbuffered log messages, these are passed
--   to <a>bufferedLoggerSpecLogger</a> immediately. For buffered log
--   messages, aggregates will eventually be passed to
--   <a>bufferedLoggerSpecLogger</a> on the configured period (see
--   <a>bufferedLoggerSpecFlushPeriod</a>).
bufferedLoggerSpecLogger :: BufferedLoggerSpec -> Logger

-- | Buffered logs are regularly flushed from internal storage on this
--   period (in microseconds). The default is 5 minutes.
bufferedLoggerSpecFlushPeriod :: BufferedLoggerSpec -> Int

-- | Max amount of time allowed for flushing buffered logs (in
--   microseconds). The default is 10 seconds.
bufferedLoggerSpecFlushTimeout :: BufferedLoggerSpec -> Int

-- | Handler that is run if flushing buffered logs takes longer than
--   <a>bufferedLoggerSpecFlushTimeout</a>. The default is to log the
--   timeout using <a>bufferedLoggerSpecOnFlushExceptionLogger</a>. This
--   may be overridden if the timeout needs to be reported or dealt with
--   via some means other than logging. Note that if the handler throws a
--   synchronous exception, that exception will be caught and ignored.
--   
--   The input argument is all remaining buffered logs that were unable to
--   be flushed within the timeout.
bufferedLoggerSpecOnFlushTimeout :: BufferedLoggerSpec -> BufferedLogs -> OnTimeout ()

-- | Handler that is run if a synchronous exception is encountered during
--   log flushing. The default is to log the exception using
--   <a>bufferedLoggerSpecOnFlushExceptionLogger</a>. This may be
--   overridden if the exception needs to be reported or dealt with via
--   some means other than logging. Note that if the handler rethrows the
--   exception, the exception will be caught and ignored.
--   
--   The input arguments are the specific buffered log and aggregate that
--   encountered an exception during flushing.
bufferedLoggerSpecOnFlushException :: BufferedLoggerSpec -> BufferedLog -> BufferedLogAgg -> OnException ()

-- | The <a>bufferedLoggerSpecOnFlushTimeout</a> and
--   <a>bufferedLoggerSpecOnFlushException</a> handlers are run using this
--   logger. This logger is intentionally different from
--   <a>bufferedLoggerSpecLogger</a>, as <a>bufferedLoggerSpecLogger</a>
--   may have ultimately been what triggered running either handler in the
--   first place.
bufferedLoggerSpecOnFlushExceptionLogger :: BufferedLoggerSpec -> Logger

-- | The internal storage tracks a count of each buffered log message's
--   occurrences (rather than tracking each occurrence) and each
--   occurrence's metadata (convenience for <tt>monad-logger-aeson</tt>
--   users). This function enables including this aggregate info in the log
--   message when it is eventually logged. The default is to not include
--   the aggregate info.
--   
--   <tt>monad-logger-aeson</tt> users may find it convenient to set this
--   function to <tt>includeLogAggregateViaAeson Just</tt>. This will
--   include the aggregate in full. If there is a risk that a buffered
--   log's aggregated metadata may exceed a logging system's max payload
--   per message, <a>Just</a> can be replaced with a function that more
--   carefully summarizes the metadata. For example, to ignore the metadata
--   altogether and instead only log the count of aggregated messages, the
--   following could be used:
--   
--   <pre>
--   <a>includeLogAggregateViaAeson</a> \bufferedLogAgg -&gt;
--     <a>Just</a> $ <a>object</a> ["count" <a>.=</a> <a>bufferedLogAggCount</a> bufferedLogAgg]
--   </pre>
bufferedLoggerSpecIncludeLogAggregate :: BufferedLoggerSpec -> BufferedLog -> BufferedLogAgg -> [SeriesElem] -> LogStr
includeLogAggregateViaAeson :: forall a. ToJSON a => (BufferedLogAgg -> Maybe a) -> BufferedLog -> BufferedLogAgg -> [SeriesElem] -> LogStr
type BufferedLogs = HashMap BufferedLog BufferedLogAgg
data BufferedLog
bufferedLogLoc :: BufferedLog -> Loc
bufferedLogLogSource :: BufferedLog -> LogSource
bufferedLogLogLevel :: BufferedLog -> LogLevel

-- | <a>Right</a> when the log message was parsed as a <a>Message</a>,
--   <a>Left</a> otherwise.
bufferedLogLogStr :: BufferedLog -> Either ByteString Text
data BufferedLogAgg
bufferedLogAggCount :: BufferedLogAgg -> Int
bufferedLogAggMetas :: BufferedLogAgg -> DList (KeyMap Value)

module OTel.API.Common.Timestamp
data Timestamp
timestampFromNanoseconds :: Integer -> Timestamp
timestampToNanoseconds :: Timestamp -> Integer
data TimestampSource
TimestampSourceNow :: TimestampSource
TimestampSourceAt :: Timestamp -> TimestampSource

module OTel.API.Common
