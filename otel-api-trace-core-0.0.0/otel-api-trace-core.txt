-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | STUB
--   
--   <tt>otel-api-trace-core</tt> STUB
@package otel-api-trace-core
@version 0.0.0

module OTel.API.Trace.Core.Attributes

-- | The URL of the OpenTelemetry schema for these keys and values.
pattern TRACE_SCHEMA_URL :: SchemaURL

-- | The full invoked ARN as provided on the <tt>Context</tt> passed to the
--   function (<tt>Lambda-Runtime-Invoked-Function-Arn</tt> header on the
--   <tt>/runtime/invocation/next</tt> applicable).
--   
--   <ul>
--   <li><i>Notes</i> This may be different from <tt>faas.id</tt> if an
--   alias is involved.</li>
--   </ul>
pattern AWS_LAMBDA_INVOKED_ARN :: Key Text

-- | The
--   <a>https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#id</a>
--   uniquely identifies the event.
pattern CLOUDEVENTS_EVENT_ID :: Key Text

-- | The
--   <a>https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#source-1</a>
--   identifies the context in which an event happened.
pattern CLOUDEVENTS_EVENT_SOURCE :: Key Text

-- | The
--   <a>https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#specversion</a>
--   which the event uses.
pattern CLOUDEVENTS_EVENT_SPEC_VERSION :: Key Text

-- | The
--   <a>https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#type</a>
--   contains a value describing the type of event related to the
--   originating occurrence.
pattern CLOUDEVENTS_EVENT_TYPE :: Key Text

-- | The
--   <a>https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#subject</a>
--   of the event in the context of the event producer (identified by
--   source).
pattern CLOUDEVENTS_EVENT_SUBJECT :: Key Text

-- | Parent-child Reference type
--   
--   <ul>
--   <li><i>Notes</i> The causal relationship between a child Span and a
--   parent Span.</li>
--   </ul>
pattern OPENTRACING_REF_TYPE :: Key Text

-- | An identifier for the database management system (DBMS) product being
--   used. See below for a list of well-known identifiers.
pattern DB_SYSTEM :: Key Text

-- | The connection string used to connect to the database. It is
--   recommended to remove embedded credentials.
pattern DB_CONNECTION_STRING :: Key Text

-- | Username for accessing the database.
pattern DB_USER :: Key Text

-- | The fully-qualified class name of the
--   <a>https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/</a>
--   driver used to connect.
pattern DB_JDBC_DRIVER_CLASSNAME :: Key Text

-- | This attribute is used to report the name of the database being
--   accessed. For commands that switch the database, this should be set to
--   the target database (even if the command fails).
--   
--   <ul>
--   <li><i>Notes</i> In some SQL databases, the database name to be used
--   is called &amp;quot;schema name&amp;quot;. In case there are multiple
--   layers that could be considered for database name (e.g. Oracle
--   instance name and schema name), the database name to be used is the
--   more specific layer (e.g. Oracle schema name).</li>
--   </ul>
pattern DB_NAME :: Key Text

-- | The database statement being executed.
--   
--   <ul>
--   <li><i>Notes</i> The value may be sanitized to exclude sensitive
--   information.</li>
--   </ul>
pattern DB_STATEMENT :: Key Text

-- | The name of the operation being executed, e.g. the
--   <a>https://docs.mongodb.com/manual/reference/command/#database-operations</a>
--   such as <tt>findAndModify</tt>, or the SQL keyword.
--   
--   <ul>
--   <li><i>Notes</i> When setting this to an SQL keyword, it is not
--   recommended to attempt any client-side parsing of
--   <tt>db.statement</tt> just to get this property, but it should be set
--   if the operation name is provided by the library being instrumented.
--   If the SQL statement has an ambiguous operation, or performs more than
--   one operation, this value may be omitted.</li>
--   </ul>
pattern DB_OPERATION :: Key Text

-- | The Microsoft SQL Server
--   <a>https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15</a>
--   connecting to. This name is used to determine the port of a named
--   instance.
--   
--   <ul>
--   <li><i>Notes</i> If setting a <tt>db.mssql.instance_name</tt>,
--   <tt>net.peer.port</tt> is no longer required (but still recommended if
--   non-standard).</li>
--   </ul>
pattern DB_MSSQL_INSTANCE_NAME :: Key Text

-- | The fetch size used for paging, i.e. how many rows will be returned at
--   once.
pattern DB_CASSANDRA_PAGE_SIZE :: Key Int64

-- | The consistency level of the query. Based on consistency values from
--   <a>https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html</a>.
pattern DB_CASSANDRA_CONSISTENCY_LEVEL :: Key Text

-- | The name of the primary table that the operation is acting upon,
--   including the keyspace name (if applicable).
--   
--   <ul>
--   <li><i>Notes</i> This mirrors the db.sql.table attribute but
--   references cassandra rather than sql. It is not recommended to attempt
--   any client-side parsing of <tt>db.statement</tt> just to get this
--   property, but it should be set if it is provided by the library being
--   instrumented. If the operation is acting upon an anonymous table, or
--   more than one table, this value MUST NOT be set.</li>
--   </ul>
pattern DB_CASSANDRA_TABLE :: Key Text

-- | Whether or not the query is idempotent.
pattern DB_CASSANDRA_IDEMPOTENCE :: Key Bool

-- | The number of times a query was speculatively executed. Not set or
--   <tt>0</tt> if the query was not executed speculatively.
pattern DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT :: Key Int64

-- | The ID of the coordinating node for a query.
pattern DB_CASSANDRA_COORDINATOR_ID :: Key Text

-- | The data center of the coordinating node for a query.
pattern DB_CASSANDRA_COORDINATOR_DC :: Key Text

-- | The index of the database being accessed as used in the
--   <a>https://redis.io/commands/select</a>, provided as an integer. To be
--   used instead of the generic <tt>db.name</tt> attribute.
pattern DB_REDIS_DATABASE_INDEX :: Key Int64

-- | The collection being accessed within the database stated in
--   <tt>db.name</tt>.
pattern DB_MONGODB_COLLECTION :: Key Text

-- | The name of the primary table that the operation is acting upon,
--   including the database name (if applicable).
--   
--   <ul>
--   <li><i>Notes</i> It is not recommended to attempt any client-side
--   parsing of <tt>db.statement</tt> just to get this property, but it
--   should be set if it is provided by the library being instrumented. If
--   the operation is acting upon an anonymous table, or more than one
--   table, this value MUST NOT be set.</li>
--   </ul>
pattern DB_SQL_TABLE :: Key Text

-- | The type of the exception (its fully-qualified class name, if
--   applicable). The dynamic type of the exception should be preferred
--   over the static type in languages that support it.
pattern EXCEPTION_TYPE :: Key Text

-- | The exception message.
pattern EXCEPTION_MESSAGE :: Key Text

-- | A stacktrace as a string in the natural representation for the
--   language runtime. The representation is to be determined and
--   documented by each language SIG.
pattern EXCEPTION_STACKTRACE :: Key Text

-- | SHOULD be set to true if the exception event is recorded at a point
--   where it is known that the exception is escaping the scope of the
--   span.
--   
--   <ul>
--   <li><i>Notes</i> An exception is considered to have escaped (or left)
--   the scope of a span, if that span is ended while the exception is
--   still logically &amp;quot;in flight&amp;quot;. This may be actually
--   &amp;quot;in flight&amp;quot; in some languages (e.g. if the exception
--   is passed to a Context manager's <tt><b>exit</b></tt> method in
--   Python) but will usually be caught at the point of recording the
--   exception in most languages.It is usually not possible to determine at
--   the point where an exception is thrown whether it will escape the
--   scope of a span. However, it is trivial to know that an exception will
--   escape, if one checks for an active exception just before ending the
--   span, as done in the <a>#recording-an-exception</a>.It follows that an
--   exception may still escape the scope of the span even if the
--   <tt>exception.escaped</tt> attribute was not set or set to false,
--   since the event might have been recorded at a time where it was not
--   clear whether the exception will escape.</li>
--   </ul>
pattern EXCEPTION_ESCAPED :: Key Bool

-- | Type of the trigger which caused this function execution.
--   
--   <ul>
--   <li><i>Notes</i> For the server/consumer span on the incoming side,
--   <tt>faas.trigger</tt> MUST be set.Clients invoking FaaS instances
--   usually cannot set <tt>faas.trigger</tt>, since they would typically
--   need to look in the payload to determine the event type. If clients
--   set it, it should be the same as the trigger that corresponding
--   incoming would have (i.e., this has nothing to do with the underlying
--   transport used to make the API call to invoke the lambda, which is
--   often HTTP).</li>
--   </ul>
pattern FAAS_TRIGGER :: Key Text

-- | The execution ID of the current function execution.
pattern FAAS_EXECUTION :: Key Text

-- | The name of the source on which the triggering operation was
--   performed. For example, in Cloud Storage or S3 corresponds to the
--   bucket name, and in Cosmos DB to the database name.
pattern FAAS_DOCUMENT_COLLECTION :: Key Text

-- | Describes the type of the operation that was performed on the data.
pattern FAAS_DOCUMENT_OPERATION :: Key Text

-- | A string containing the time when the data was accessed in the
--   <a>https://www.iso.org/iso-8601-date-and-time-format.html</a> format
--   expressed in <a>https://www.w3.org/TR/NOTE-datetime</a>.
pattern FAAS_DOCUMENT_TIME :: Key Text

-- | The document name/table subjected to the operation. For example, in
--   Cloud Storage or S3 is the name of the file, and in Cosmos DB the
--   table name.
pattern FAAS_DOCUMENT_NAME :: Key Text

-- | A string containing the function invocation time in the
--   <a>https://www.iso.org/iso-8601-date-and-time-format.html</a> format
--   expressed in <a>https://www.w3.org/TR/NOTE-datetime</a>.
pattern FAAS_TIME :: Key Text

-- | A string containing the schedule period as
--   <a>https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm</a>.
pattern FAAS_CRON :: Key Text

-- | A boolean that is true if the serverless function is executed for the
--   first time (aka cold-start).
pattern FAAS_COLDSTART :: Key Bool

-- | The name of the invoked function.
--   
--   <ul>
--   <li><i>Notes</i> SHOULD be equal to the <tt>faas.name</tt> resource
--   attribute of the invoked function.</li>
--   </ul>
pattern FAAS_INVOKED_NAME :: Key Text

-- | The cloud provider of the invoked function.
--   
--   <ul>
--   <li><i>Notes</i> SHOULD be equal to the <tt>cloud.provider</tt>
--   resource attribute of the invoked function.</li>
--   </ul>
pattern FAAS_INVOKED_PROVIDER :: Key Text

-- | The cloud region of the invoked function.
--   
--   <ul>
--   <li><i>Notes</i> SHOULD be equal to the <tt>cloud.region</tt> resource
--   attribute of the invoked function.</li>
--   </ul>
pattern FAAS_INVOKED_REGION :: Key Text

-- | Transport protocol used. See note below.
pattern NET_TRANSPORT :: Key Text

-- | Remote address of the peer (dotted decimal for IPv4 or
--   <a>https://tools.ietf.org/html/rfc5952</a> for IPv6)
pattern NET_PEER_IP :: Key Text

-- | Remote port number.
pattern NET_PEER_PORT :: Key Int64

-- | Remote hostname or similar, see note below.
--   
--   <ul>
--   <li><i>Notes</i> <tt>net.peer.name</tt> SHOULD NOT be set if capturing
--   it would require an extra DNS lookup.</li>
--   </ul>
pattern NET_PEER_NAME :: Key Text

-- | Like <tt>net.peer.ip</tt> but for the host IP. Useful in case of a
--   multi-IP host.
pattern NET_HOST_IP :: Key Text

-- | Like <tt>net.peer.port</tt> but for the host port.
pattern NET_HOST_PORT :: Key Int64

-- | Local hostname or similar, see note below.
pattern NET_HOST_NAME :: Key Text

-- | The internet connection type currently being used by the host.
pattern NET_HOST_CONNECTION_TYPE :: Key Text

-- | This describes more details regarding the connection.type. It may be
--   the type of cell technology connection, but it could be used for
--   describing details about a wifi connection.
pattern NET_HOST_CONNECTION_SUBTYPE :: Key Text

-- | The name of the mobile carrier.
pattern NET_HOST_CARRIER_NAME :: Key Text

-- | The mobile carrier country code.
pattern NET_HOST_CARRIER_MCC :: Key Text

-- | The mobile carrier network code.
pattern NET_HOST_CARRIER_MNC :: Key Text

-- | The ISO 3166-1 alpha-2 2-character country code associated with the
--   mobile carrier network.
pattern NET_HOST_CARRIER_ICC :: Key Text

-- | The <a>../../resource/semantic_conventions/README.md#service</a> of
--   the remote service. SHOULD be equal to the actual
--   <tt>service.name</tt> resource attribute of the remote service if any.
pattern PEER_SERVICE :: Key Text

-- | Username or client_id extracted from the access token or
--   <a>https://tools.ietf.org/html/rfc7235#section-4.2</a> header in the
--   inbound request from outside the system.
pattern ENDUSER_ID :: Key Text

-- | Actual/assumed role the client is making the request under extracted
--   from token or application security context.
pattern ENDUSER_ROLE :: Key Text

-- | Scopes or granted authorities the client currently possesses extracted
--   from token or application security context. The value would come from
--   the scope associated with an
--   <a>https://tools.ietf.org/html/rfc6749#section-3.3</a> or an attribute
--   value in a
--   <a>http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html</a>.
pattern ENDUSER_SCOPE :: Key Text

-- | Current &amp;quot;managed&amp;quot; thread ID (as opposed to OS thread
--   ID).
pattern THREAD_ID :: Key Int64

-- | Current thread name.
pattern THREAD_NAME :: Key Text

-- | The method or function name, or equivalent (usually rightmost part of
--   the code unit's name).
pattern CODE_FUNCTION :: Key Text

-- | The &amp;quot;namespace&amp;quot; within which <tt>code.function</tt>
--   is defined. Usually the qualified class or module name, such that
--   <tt>code.namespace</tt> + some separator + <tt>code.function</tt> form
--   a unique identifier for the code unit.
pattern CODE_NAMESPACE :: Key Text

-- | The source code file name that identifies the code unit as uniquely as
--   possible (preferably an absolute file path).
pattern CODE_FILEPATH :: Key Text

-- | The line number in <tt>code.filepath</tt> best representing the
--   operation. It SHOULD point within the code unit named in
--   <tt>code.function</tt>.
pattern CODE_LINENO :: Key Int64

-- | HTTP request method.
pattern HTTP_METHOD :: Key Text

-- | Full HTTP request URL in the form
--   <tt>scheme://host[:port]/path?query[#fragment]</tt>. Usually the
--   fragment is not transmitted over HTTP, but if it is known, it should
--   be included nevertheless.
--   
--   <ul>
--   <li><i>Notes</i> <tt>http.url</tt> MUST NOT contain credentials passed
--   via URL in form of
--   <tt>https://username:password</tt>www.example.com/<tt>. In such case
--   the attribute's value should be </tt>https://www.example.com/@.</li>
--   </ul>
pattern HTTP_URL :: Key Text

-- | The full request target as passed in a HTTP request line or
--   equivalent.
pattern HTTP_TARGET :: Key Text

-- | The value of the
--   <a>https://tools.ietf.org/html/rfc7230#section-5.4</a>. An empty Host
--   header should also be reported, see note.
--   
--   <ul>
--   <li><i>Notes</i> When the header is present but empty the attribute
--   SHOULD be set to the empty string. Note that this is a valid situation
--   that is expected in certain cases, according the aforementioned
--   <a>https://tools.ietf.org/html/rfc7230#section-5.4</a>. When the
--   header is not set the attribute MUST NOT be set.</li>
--   </ul>
pattern HTTP_HOST :: Key Text

-- | The URI scheme identifying the used protocol.
pattern HTTP_SCHEME :: Key Text

-- | <a>https://tools.ietf.org/html/rfc7231#section-6</a>.
pattern HTTP_STATUS_CODE :: Key Int64

-- | Kind of HTTP protocol used.
--   
--   <ul>
--   <li><i>Notes</i> If <tt>net.transport</tt> is not specified, it can be
--   assumed to be <tt>IP.TCP</tt> except if <tt>http.flavor</tt> is
--   <tt>QUIC</tt>, in which case <tt>IP.UDP</tt> is assumed.</li>
--   </ul>
pattern HTTP_FLAVOR :: Key Text

-- | Value of the <a>https://tools.ietf.org/html/rfc7231#section-5.5.3</a>
--   header sent by the client.
pattern HTTP_USER_AGENT :: Key Text

-- | The size of the request payload body in bytes. This is the number of
--   bytes transferred excluding headers and is often, but not always,
--   present as the
--   <a>https://tools.ietf.org/html/rfc7230#section-3.3.2</a> header. For
--   requests using transport encoding, this should be the compressed size.
pattern HTTP_REQUEST_CONTENT_LENGTH :: Key Int64

-- | The size of the uncompressed request payload body after transport
--   decoding. Not set if transport encoding not used.
pattern HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED :: Key Int64

-- | The size of the response payload body in bytes. This is the number of
--   bytes transferred excluding headers and is often, but not always,
--   present as the
--   <a>https://tools.ietf.org/html/rfc7230#section-3.3.2</a> header. For
--   requests using transport encoding, this should be the compressed size.
pattern HTTP_RESPONSE_CONTENT_LENGTH :: Key Int64

-- | The size of the uncompressed response payload body after transport
--   decoding. Not set if transport encoding not used.
pattern HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED :: Key Int64

-- | The ordinal number of request re-sending attempt.
pattern HTTP_RETRY_COUNT :: Key Int64

-- | The primary server name of the matched virtual host. This should be
--   obtained via configuration. If no such configuration can be obtained,
--   this attribute MUST NOT be set ( <tt>net.host.name</tt> should be used
--   instead).
--   
--   <ul>
--   <li><i>Notes</i> <tt>http.url</tt> is usually not readily available on
--   the server side but would have to be assembled in a cumbersome and
--   sometimes lossy process from other information (see e.g.
--   open-telemetry<i>opentelemetry-python</i>pull/148). It is thus
--   preferred to supply the raw data that is available.</li>
--   </ul>
pattern HTTP_SERVER_NAME :: Key Text

-- | The matched route (path template).
pattern HTTP_ROUTE :: Key Text

-- | The IP address of the original client behind all proxies, if known
--   (e.g. from
--   <a>https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For</a>).
--   
--   <ul>
--   <li><i>Notes</i> This is not necessarily the same as
--   <tt>net.peer.ip</tt>, which would identify the network-level peer,
--   which may be a proxy.This attribute should be set when a source of
--   information different from the one used for <tt>net.peer.ip</tt>, is
--   available even if that other source just confirms the same value as
--   <tt>net.peer.ip</tt>. Rationale: For <tt>net.peer.ip</tt>, one
--   typically does not know if it comes from a proxy, reverse proxy, or
--   the actual client. Setting <tt>http.client_ip</tt> when it's the same
--   as <tt>net.peer.ip</tt> means that one is at least somewhat confident
--   that the address is not that of the closest proxy.</li>
--   </ul>
pattern HTTP_CLIENT_IP :: Key Text

-- | The keys in the <tt>RequestItems</tt> object field.
pattern AWS_DYNAMODB_TABLE_NAMES :: Key (AttrVals Text)

-- | The JSON-serialized value of each item in the
--   <tt>ConsumedCapacity</tt> response field.
pattern AWS_DYNAMODB_CONSUMED_CAPACITY :: Key (AttrVals Text)

-- | The JSON-serialized value of the <tt>ItemCollectionMetrics</tt>
--   response field.
pattern AWS_DYNAMODB_ITEM_COLLECTION_METRICS :: Key Text

-- | The value of the <tt>ProvisionedThroughput.ReadCapacityUnits</tt>
--   request parameter.
pattern AWS_DYNAMODB_PROVISIONED_READ_CAPACITY :: Key Double

-- | The value of the <tt>ProvisionedThroughput.WriteCapacityUnits</tt>
--   request parameter.
pattern AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY :: Key Double

-- | The value of the <tt>ConsistentRead</tt> request parameter.
pattern AWS_DYNAMODB_CONSISTENT_READ :: Key Bool

-- | The value of the <tt>ProjectionExpression</tt> request parameter.
pattern AWS_DYNAMODB_PROJECTION :: Key Text

-- | The value of the <tt>Limit</tt> request parameter.
pattern AWS_DYNAMODB_LIMIT :: Key Int64

-- | The value of the <tt>AttributesToGet</tt> request parameter.
pattern AWS_DYNAMODB_ATTRIBUTES_TO_GET :: Key (AttrVals Text)

-- | The value of the <tt>IndexName</tt> request parameter.
pattern AWS_DYNAMODB_INDEX_NAME :: Key Text

-- | The value of the <tt>Select</tt> request parameter.
pattern AWS_DYNAMODB_SELECT :: Key Text

-- | The JSON-serialized value of each item of the
--   <tt>GlobalSecondaryIndexes</tt> request field
pattern AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES :: Key (AttrVals Text)

-- | The JSON-serialized value of each item of the
--   <tt>LocalSecondaryIndexes</tt> request field.
pattern AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES :: Key (AttrVals Text)

-- | The value of the <tt>ExclusiveStartTableName</tt> request parameter.
pattern AWS_DYNAMODB_EXCLUSIVE_START_TABLE :: Key Text

-- | The the number of items in the <tt>TableNames</tt> response parameter.
pattern AWS_DYNAMODB_TABLE_COUNT :: Key Int64

-- | The value of the <tt>ScanIndexForward</tt> request parameter.
pattern AWS_DYNAMODB_SCAN_FORWARD :: Key Bool

-- | The value of the <tt>Segment</tt> request parameter.
pattern AWS_DYNAMODB_SEGMENT :: Key Int64

-- | The value of the <tt>TotalSegments</tt> request parameter.
pattern AWS_DYNAMODB_TOTAL_SEGMENTS :: Key Int64

-- | The value of the <tt>Count</tt> response parameter.
pattern AWS_DYNAMODB_COUNT :: Key Int64

-- | The value of the <tt>ScannedCount</tt> response parameter.
pattern AWS_DYNAMODB_SCANNED_COUNT :: Key Int64

-- | The JSON-serialized value of each item in the
--   <tt>AttributeDefinitions</tt> request field.
pattern AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS :: Key (AttrVals Text)

-- | The JSON-serialized value of each item in the the
--   <tt>GlobalSecondaryIndexUpdates</tt> request field.
pattern AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES :: Key (AttrVals Text)

-- | A string identifying the messaging system.
pattern MESSAGING_SYSTEM :: Key Text

-- | The message destination name. This might be equal to the span name but
--   is required nevertheless.
pattern MESSAGING_DESTINATION :: Key Text

-- | The kind of message destination
pattern MESSAGING_DESTINATION_KIND :: Key Text

-- | A boolean that is true if the message destination is temporary.
pattern MESSAGING_TEMP_DESTINATION :: Key Bool

-- | The name of the transport protocol.
pattern MESSAGING_PROTOCOL :: Key Text

-- | The version of the transport protocol.
pattern MESSAGING_PROTOCOL_VERSION :: Key Text

-- | Connection string.
pattern MESSAGING_URL :: Key Text

-- | A value used by the messaging system as an identifier for the message,
--   represented as a string.
pattern MESSAGING_MESSAGE_ID :: Key Text

-- | The <a>#conversations</a> identifying the conversation to which the
--   message belongs, represented as a string. Sometimes called
--   &amp;quot;Correlation ID&amp;quot;.
pattern MESSAGING_CONVERSATION_ID :: Key Text

-- | The (uncompressed) size of the message payload in bytes. Also use this
--   attribute if it is unknown whether the compressed or uncompressed
--   payload size is reported.
pattern MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES :: Key Int64

-- | The compressed size of the message payload in bytes.
pattern MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES :: Key Int64

-- | A string identifying the kind of message consumption as defined in the
--   <a>#operation-names</a> section above. If the operation is
--   &amp;quot;send&amp;quot;, this attribute MUST NOT be set, since the
--   operation can be inferred from the span kind in that case.
pattern MESSAGING_OPERATION :: Key Text

-- | The identifier for the consumer receiving a message. For Kafka, set it
--   to <tt>{messaging.kafka.consumer_group} -
--   {messaging.kafka.client_id}</tt>, if both are present, or only
--   <tt>messaging.kafka.consumer_group</tt>. For brokers, such as RabbitMQ
--   and Artemis, set it to the <tt>client_id</tt> of the client consuming
--   the message.
pattern MESSAGING_CONSUMER_ID :: Key Text

-- | RabbitMQ message routing key.
pattern MESSAGING_RABBITMQ_ROUTING_KEY :: Key Text

-- | Message keys in Kafka are used for grouping alike messages to ensure
--   they're processed on the same partition. They differ from
--   <tt>messaging.message_id</tt> in that they're not unique. If the key
--   is <tt>null</tt>, the attribute MUST NOT be set.
--   
--   <ul>
--   <li><i>Notes</i> If the key type is not string, it's string
--   representation has to be supplied for the attribute. If the key has no
--   unambiguous, canonical string form, don't include its value.</li>
--   </ul>
pattern MESSAGING_KAFKA_MESSAGE_KEY :: Key Text

-- | Name of the Kafka Consumer Group that is handling the message. Only
--   applies to consumers, not producers.
pattern MESSAGING_KAFKA_CONSUMER_GROUP :: Key Text

-- | Client Id for the Consumer or Producer that is handling the message.
pattern MESSAGING_KAFKA_CLIENT_ID :: Key Text

-- | Partition the message is sent to.
pattern MESSAGING_KAFKA_PARTITION :: Key Int64

-- | A boolean that is true if the message is a tombstone.
pattern MESSAGING_KAFKA_TOMBSTONE :: Key Bool

-- | Namespace of RocketMQ resources, resources in different namespaces are
--   individual.
pattern MESSAGING_ROCKETMQ_NAMESPACE :: Key Text

-- | Name of the RocketMQ producer/consumer group that is handling the
--   message. The client type is identified by the SpanKind.
pattern MESSAGING_ROCKETMQ_CLIENT_GROUP :: Key Text

-- | The unique identifier for each client.
pattern MESSAGING_ROCKETMQ_CLIENT_ID :: Key Text

-- | Type of message.
pattern MESSAGING_ROCKETMQ_MESSAGE_TYPE :: Key Text

-- | The secondary classifier of message besides topic.
pattern MESSAGING_ROCKETMQ_MESSAGE_TAG :: Key Text

-- | Key(s) of message, another way to mark message besides message id.
pattern MESSAGING_ROCKETMQ_MESSAGE_KEYS :: Key (AttrVals Text)

-- | Model of message consumption. This only applies to consumer spans.
pattern MESSAGING_ROCKETMQ_CONSUMPTION_MODEL :: Key Text

-- | A string identifying the remoting system. See below for a list of
--   well-known identifiers.
pattern RPC_SYSTEM :: Key Text

-- | The full (logical) name of the service being called, including its
--   package name, if applicable.
--   
--   <ul>
--   <li><i>Notes</i> This is the logical name of the service from the RPC
--   interface perspective, which can be different from the name of any
--   implementing class. The <tt>code.namespace</tt> attribute may be used
--   to store the latter (despite the attribute name, it may include a
--   class name; e.g., class with method actually executing the call on the
--   server side, RPC client stub class on the client side).</li>
--   </ul>
pattern RPC_SERVICE :: Key Text

-- | The name of the (logical) method being called, must be equal to the
--   $method part in the span name.
--   
--   <ul>
--   <li><i>Notes</i> This is the logical name of the method from the RPC
--   interface perspective, which can be different from the name of any
--   implementing method/function. The <tt>code.function</tt> attribute may
--   be used to store the latter (e.g., method actually executing the call
--   on the server side, RPC client stub method on the client side).</li>
--   </ul>
pattern RPC_METHOD :: Key Text

-- | The
--   <a>https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md</a> of
--   the gRPC request.
pattern RPC_GRPC_STATUS_CODE :: Key Int64

-- | Protocol version as in <tt>jsonrpc</tt> property of request/response.
--   Since JSON-RPC 1.0 does not specify this, the value can be omitted.
pattern RPC_JSONRPC_VERSION :: Key Text

-- | <tt>id</tt> property of request or response. Since protocol allows id
--   to be int, string, <tt>null</tt> or missing (for notifications), value
--   is expected to be cast to string for simplicity. Use empty string in
--   case of <tt>null</tt> value. Omit entirely if this is a notification.
pattern RPC_JSONRPC_REQUEST_ID :: Key Text

-- | <tt>error.code</tt> property of response if it is an error response.
pattern RPC_JSONRPC_ERROR_CODE :: Key Int64

-- | <tt>error.message</tt> property of response if it is an error
--   response.
pattern RPC_JSONRPC_ERROR_MESSAGE :: Key Text

-- | Whether this is a received or sent message.
pattern MESSAGE_TYPE :: Key Text

-- | MUST be calculated as two different counters starting from <tt>1</tt>
--   one for sent messages and one for received message.
--   
--   <ul>
--   <li><i>Notes</i> This way we guarantee that the values will be
--   consistent between different implementations.</li>
--   </ul>
pattern MESSAGE_ID :: Key Int64

-- | Compressed size of the message in bytes.
pattern MESSAGE_COMPRESSED_SIZE :: Key Int64

-- | Uncompressed size of the message in bytes.
pattern MESSAGE_UNCOMPRESSED_SIZE :: Key Int64
data OpentracingRefType

-- | The parent Span depends on the child Span in some capacity.
OpentracingRefTypeChildOf :: OpentracingRefType

-- | The parent Span does not depend in any way on the result of the child
--   Span.
OpentracingRefTypeFollowsFrom :: OpentracingRefType
data DbSystem

-- | Some other SQL database. Fallback only. See notes.
DbSystemOtherSql :: DbSystem

-- | Microsoft SQL Server.
DbSystemMssql :: DbSystem

-- | MySQL.
DbSystemMysql :: DbSystem

-- | Oracle Database.
DbSystemOracle :: DbSystem

-- | IBM Db2.
DbSystemDb2 :: DbSystem

-- | PostgreSQL.
DbSystemPostgresql :: DbSystem

-- | Amazon Redshift.
DbSystemRedshift :: DbSystem

-- | Apache Hive.
DbSystemHive :: DbSystem

-- | Cloudscape.
DbSystemCloudscape :: DbSystem

-- | HyperSQL DataBase.
DbSystemHsqldb :: DbSystem

-- | Progress Database.
DbSystemProgress :: DbSystem

-- | SAP MaxDB.
DbSystemMaxdb :: DbSystem

-- | SAP HANA.
DbSystemHanadb :: DbSystem

-- | Ingres.
DbSystemIngres :: DbSystem

-- | FirstSQL.
DbSystemFirstsql :: DbSystem

-- | EnterpriseDB.
DbSystemEdb :: DbSystem

-- | InterSystems Caché.
DbSystemCache :: DbSystem

-- | Adabas (Adaptable Database System).
DbSystemAdabas :: DbSystem

-- | Firebird.
DbSystemFirebird :: DbSystem

-- | Apache Derby.
DbSystemDerby :: DbSystem

-- | FileMaker.
DbSystemFilemaker :: DbSystem

-- | Informix.
DbSystemInformix :: DbSystem

-- | InstantDB.
DbSystemInstantdb :: DbSystem

-- | InterBase.
DbSystemInterbase :: DbSystem

-- | MariaDB.
DbSystemMariadb :: DbSystem

-- | Netezza.
DbSystemNetezza :: DbSystem

-- | Pervasive PSQL.
DbSystemPervasive :: DbSystem

-- | PointBase.
DbSystemPointbase :: DbSystem

-- | SQLite.
DbSystemSqlite :: DbSystem

-- | Sybase.
DbSystemSybase :: DbSystem

-- | Teradata.
DbSystemTeradata :: DbSystem

-- | Vertica.
DbSystemVertica :: DbSystem

-- | H2.
DbSystemH2 :: DbSystem

-- | ColdFusion IMQ.
DbSystemColdfusion :: DbSystem

-- | Apache Cassandra.
DbSystemCassandra :: DbSystem

-- | Apache HBase.
DbSystemHbase :: DbSystem

-- | MongoDB.
DbSystemMongodb :: DbSystem

-- | Redis.
DbSystemRedis :: DbSystem

-- | Couchbase.
DbSystemCouchbase :: DbSystem

-- | CouchDB.
DbSystemCouchdb :: DbSystem

-- | Microsoft Azure Cosmos DB.
DbSystemCosmosdb :: DbSystem

-- | Amazon DynamoDB.
DbSystemDynamodb :: DbSystem

-- | Neo4j.
DbSystemNeo4j :: DbSystem

-- | Apache Geode.
DbSystemGeode :: DbSystem

-- | Elasticsearch.
DbSystemElasticsearch :: DbSystem

-- | Memcached.
DbSystemMemcached :: DbSystem

-- | CockroachDB.
DbSystemCockroachdb :: DbSystem
data DbCassandraConsistencyLevel

-- | all.
DbCassandraConsistencyLevelAll :: DbCassandraConsistencyLevel

-- | each_quorum.
DbCassandraConsistencyLevelEachQuorum :: DbCassandraConsistencyLevel

-- | quorum.
DbCassandraConsistencyLevelQuorum :: DbCassandraConsistencyLevel

-- | local_quorum.
DbCassandraConsistencyLevelLocalQuorum :: DbCassandraConsistencyLevel

-- | one.
DbCassandraConsistencyLevelOne :: DbCassandraConsistencyLevel

-- | two.
DbCassandraConsistencyLevelTwo :: DbCassandraConsistencyLevel

-- | three.
DbCassandraConsistencyLevelThree :: DbCassandraConsistencyLevel

-- | local_one.
DbCassandraConsistencyLevelLocalOne :: DbCassandraConsistencyLevel

-- | any.
DbCassandraConsistencyLevelAny :: DbCassandraConsistencyLevel

-- | serial.
DbCassandraConsistencyLevelSerial :: DbCassandraConsistencyLevel

-- | local_serial.
DbCassandraConsistencyLevelLocalSerial :: DbCassandraConsistencyLevel
data FaasTrigger

-- | A response to some data source operation such as a database or
--   filesystem read/write.
FaasTriggerDatasource :: FaasTrigger

-- | To provide an answer to an inbound HTTP request.
FaasTriggerHttp :: FaasTrigger

-- | A function is set to be executed when messages are sent to a messaging
--   system.
FaasTriggerPubsub :: FaasTrigger

-- | A function is scheduled to be executed regularly.
FaasTriggerTimer :: FaasTrigger

-- | If none of the others apply.
FaasTriggerOther :: FaasTrigger
data FaasDocumentOperation

-- | When a new object is created.
FaasDocumentOperationInsert :: FaasDocumentOperation

-- | When an object is modified.
FaasDocumentOperationEdit :: FaasDocumentOperation

-- | When an object is deleted.
FaasDocumentOperationDelete :: FaasDocumentOperation
data FaasInvokedProvider

-- | Alibaba Cloud.
FaasInvokedProviderAlibabaCloud :: FaasInvokedProvider

-- | Amazon Web Services.
FaasInvokedProviderAws :: FaasInvokedProvider

-- | Microsoft Azure.
FaasInvokedProviderAzure :: FaasInvokedProvider

-- | Google Cloud Platform.
FaasInvokedProviderGcp :: FaasInvokedProvider

-- | Tencent Cloud.
FaasInvokedProviderTencentCloud :: FaasInvokedProvider
data NetTransport

-- | ip_tcp.
NetTransportIpTcp :: NetTransport

-- | ip_udp.
NetTransportIpUdp :: NetTransport

-- | Another IP-based protocol.
NetTransportIp :: NetTransport

-- | Unix Domain socket. See below.
NetTransportUnix :: NetTransport

-- | Named or anonymous pipe. See note below.
NetTransportPipe :: NetTransport

-- | In-process communication.
NetTransportInproc :: NetTransport

-- | Something else (non IP-based).
NetTransportOther :: NetTransport
data NetHostConnectionType

-- | wifi.
NetHostConnectionTypeWifi :: NetHostConnectionType

-- | wired.
NetHostConnectionTypeWired :: NetHostConnectionType

-- | cell.
NetHostConnectionTypeCell :: NetHostConnectionType

-- | unavailable.
NetHostConnectionTypeUnavailable :: NetHostConnectionType

-- | unknown.
NetHostConnectionTypeUnknown :: NetHostConnectionType
data NetHostConnectionSubtype

-- | GPRS.
NetHostConnectionSubtypeGprs :: NetHostConnectionSubtype

-- | EDGE.
NetHostConnectionSubtypeEdge :: NetHostConnectionSubtype

-- | UMTS.
NetHostConnectionSubtypeUmts :: NetHostConnectionSubtype

-- | CDMA.
NetHostConnectionSubtypeCdma :: NetHostConnectionSubtype

-- | EVDO Rel. 0.
NetHostConnectionSubtypeEvdo0 :: NetHostConnectionSubtype

-- | EVDO Rev. A.
NetHostConnectionSubtypeEvdoA :: NetHostConnectionSubtype

-- | CDMA2000 1XRTT.
NetHostConnectionSubtypeCdma20001xrtt :: NetHostConnectionSubtype

-- | HSDPA.
NetHostConnectionSubtypeHsdpa :: NetHostConnectionSubtype

-- | HSUPA.
NetHostConnectionSubtypeHsupa :: NetHostConnectionSubtype

-- | HSPA.
NetHostConnectionSubtypeHspa :: NetHostConnectionSubtype

-- | IDEN.
NetHostConnectionSubtypeIden :: NetHostConnectionSubtype

-- | EVDO Rev. B.
NetHostConnectionSubtypeEvdoB :: NetHostConnectionSubtype

-- | LTE.
NetHostConnectionSubtypeLte :: NetHostConnectionSubtype

-- | EHRPD.
NetHostConnectionSubtypeEhrpd :: NetHostConnectionSubtype

-- | HSPAP.
NetHostConnectionSubtypeHspap :: NetHostConnectionSubtype

-- | GSM.
NetHostConnectionSubtypeGsm :: NetHostConnectionSubtype

-- | TD-SCDMA.
NetHostConnectionSubtypeTdScdma :: NetHostConnectionSubtype

-- | IWLAN.
NetHostConnectionSubtypeIwlan :: NetHostConnectionSubtype

-- | 5G NR (New Radio).
NetHostConnectionSubtypeNr :: NetHostConnectionSubtype

-- | 5G NRNSA (New Radio Non-Standalone).
NetHostConnectionSubtypeNrnsa :: NetHostConnectionSubtype

-- | LTE CA.
NetHostConnectionSubtypeLteCa :: NetHostConnectionSubtype
data HttpFlavor

-- | HTTP/1.0.
HttpFlavorHttp10 :: HttpFlavor

-- | HTTP/1.1.
HttpFlavorHttp11 :: HttpFlavor

-- | HTTP/2.
HttpFlavorHttp20 :: HttpFlavor

-- | HTTP/3.
HttpFlavorHttp30 :: HttpFlavor

-- | SPDY protocol.
HttpFlavorSpdy :: HttpFlavor

-- | QUIC protocol.
HttpFlavorQuic :: HttpFlavor
data MessagingDestinationKind

-- | A message sent to a queue.
MessagingDestinationKindQueue :: MessagingDestinationKind

-- | A message sent to a topic.
MessagingDestinationKindTopic :: MessagingDestinationKind
data MessagingOperation

-- | receive.
MessagingOperationReceive :: MessagingOperation

-- | process.
MessagingOperationProcess :: MessagingOperation
data MessagingRocketmqMessageType

-- | Normal message.
MessagingRocketmqMessageTypeNormal :: MessagingRocketmqMessageType

-- | FIFO message.
MessagingRocketmqMessageTypeFifo :: MessagingRocketmqMessageType

-- | Delay message.
MessagingRocketmqMessageTypeDelay :: MessagingRocketmqMessageType

-- | Transaction message.
MessagingRocketmqMessageTypeTransaction :: MessagingRocketmqMessageType
data MessagingRocketmqConsumptionModel

-- | Clustering consumption model.
MessagingRocketmqConsumptionModelClustering :: MessagingRocketmqConsumptionModel

-- | Broadcasting consumption model.
MessagingRocketmqConsumptionModelBroadcasting :: MessagingRocketmqConsumptionModel
data RpcSystem

-- | gRPC.
RpcSystemGrpc :: RpcSystem

-- | Java RMI.
RpcSystemJavaRmi :: RpcSystem

-- | .NET WCF.
RpcSystemDotnetWcf :: RpcSystem

-- | Apache Dubbo.
RpcSystemApacheDubbo :: RpcSystem
data RpcGrpcStatusCode

-- | OK.
RpcGrpcStatusCodeOk :: RpcGrpcStatusCode

-- | CANCELLED.
RpcGrpcStatusCodeCancelled :: RpcGrpcStatusCode

-- | UNKNOWN.
RpcGrpcStatusCodeUnknown :: RpcGrpcStatusCode

-- | INVALID_ARGUMENT.
RpcGrpcStatusCodeInvalidArgument :: RpcGrpcStatusCode

-- | DEADLINE_EXCEEDED.
RpcGrpcStatusCodeDeadlineExceeded :: RpcGrpcStatusCode

-- | NOT_FOUND.
RpcGrpcStatusCodeNotFound :: RpcGrpcStatusCode

-- | ALREADY_EXISTS.
RpcGrpcStatusCodeAlreadyExists :: RpcGrpcStatusCode

-- | PERMISSION_DENIED.
RpcGrpcStatusCodePermissionDenied :: RpcGrpcStatusCode

-- | RESOURCE_EXHAUSTED.
RpcGrpcStatusCodeResourceExhausted :: RpcGrpcStatusCode

-- | FAILED_PRECONDITION.
RpcGrpcStatusCodeFailedPrecondition :: RpcGrpcStatusCode

-- | ABORTED.
RpcGrpcStatusCodeAborted :: RpcGrpcStatusCode

-- | OUT_OF_RANGE.
RpcGrpcStatusCodeOutOfRange :: RpcGrpcStatusCode

-- | UNIMPLEMENTED.
RpcGrpcStatusCodeUnimplemented :: RpcGrpcStatusCode

-- | INTERNAL.
RpcGrpcStatusCodeInternal :: RpcGrpcStatusCode

-- | UNAVAILABLE.
RpcGrpcStatusCodeUnavailable :: RpcGrpcStatusCode

-- | DATA_LOSS.
RpcGrpcStatusCodeDataLoss :: RpcGrpcStatusCode

-- | UNAUTHENTICATED.
RpcGrpcStatusCodeUnauthenticated :: RpcGrpcStatusCode
data MessageType

-- | sent.
MessageTypeSent :: MessageType

-- | received.
MessageTypeReceived :: MessageType

-- | The name of the keyspace being accessed.
--   
--   <i>Deprecated:</i> This item has been removed as of 1.8.0 of the
--   semantic conventions. Please use <a>DB_NAME</a> instead.

-- | <i>Deprecated: This item has been removed as of 1.8.0 of the semantic
--   conventions. Please use DB_NAME instead.</i>
pattern DB_CASSANDRA_KEYSPACE :: Key Text

-- | The <a>HBase namespace</a> being accessed.
--   
--   <i>Deprecated:</i> This item has been removed as of 1.8.0 of the
--   semantic conventions. Please use <a>DB_NAME</a> instead.

-- | <i>Deprecated: This item has been removed as of 1.8.0 of the semantic
--   conventions. Please use DB_NAME instead.</i>
pattern DB_HBASE_NAMESPACE :: Key Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.MessageType Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.RpcGrpcStatusCode Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.RpcSystem Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.MessagingRocketmqConsumptionModel Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.MessagingRocketmqMessageType Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.MessagingOperation Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.MessagingDestinationKind Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.HttpFlavor Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.NetHostConnectionSubtype Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.NetHostConnectionType Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.NetTransport Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.FaasInvokedProvider Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.FaasDocumentOperation Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.FaasTrigger Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.DbCassandraConsistencyLevel Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.DbSystem Data.Text.Internal.Text
instance OTel.API.Common.Internal.ToAttrVal OTel.API.Trace.Core.Attributes.OpentracingRefType Data.Text.Internal.Text

module OTel.API.Trace.Core.TraceState.Errors
newtype TraceStateErrors
TraceStateErrors :: [TraceStateError] -> TraceStateErrors
[$sel:unTraceStateErrors:TraceStateErrors] :: TraceStateErrors -> [TraceStateError]
data TraceStateError
TraceStateSimpleKeyIsEmpty :: TraceStateSimpleKeyIsEmptyError -> TraceStateError
TraceStateSimpleKeyContainsInvalidChars :: TraceStateSimpleKeyContainsInvalidCharsError -> TraceStateError
TraceStateTenantIdIsEmpty :: TraceStateTenantIdIsEmptyError -> TraceStateError
TraceStateTenantIdContainsInvalidChars :: TraceStateTenantIdContainsInvalidCharsError -> TraceStateError
TraceStateSystemIdIsEmpty :: TraceStateSystemIdIsEmptyError -> TraceStateError
TraceStateSystemIdContainsInvalidChars :: TraceStateSystemIdContainsInvalidCharsError -> TraceStateError
TraceStateSimpleKeyTooLong :: TraceStateSimpleKeyTooLongError -> TraceStateError
TraceStateTenantIdTooLong :: TraceStateTenantIdTooLongError -> TraceStateError
TraceStateSystemIdTooLong :: TraceStateSystemIdTooLongError -> TraceStateError
TraceStateKeyTypeUnknown :: TraceStateKeyTypeUnknownError -> TraceStateError
TraceStateValueIsEmpty :: TraceStateValueIsEmptyError -> TraceStateError
TraceStateValueContainsInvalidChars :: TraceStateValueContainsInvalidCharsError -> TraceStateError
TraceStateValueTooLong :: TraceStateValueTooLongError -> TraceStateError
newtype TraceStateSimpleKeyIsEmptyError
TraceStateSimpleKeyIsEmptyError :: Text -> TraceStateSimpleKeyIsEmptyError
[$sel:rawValue:TraceStateSimpleKeyIsEmptyError] :: TraceStateSimpleKeyIsEmptyError -> Text
data TraceStateSimpleKeyContainsInvalidCharsError
TraceStateSimpleKeyContainsInvalidCharsError :: Key Text -> Text -> Text -> TraceStateSimpleKeyContainsInvalidCharsError
[$sel:rawKey:TraceStateSimpleKeyContainsInvalidCharsError] :: TraceStateSimpleKeyContainsInvalidCharsError -> Key Text
[$sel:rawValue:TraceStateSimpleKeyContainsInvalidCharsError] :: TraceStateSimpleKeyContainsInvalidCharsError -> Text
[$sel:invalidChars:TraceStateSimpleKeyContainsInvalidCharsError] :: TraceStateSimpleKeyContainsInvalidCharsError -> Text
data TraceStateTenantIdIsEmptyError
TraceStateTenantIdIsEmptyError :: Text -> Text -> TraceStateTenantIdIsEmptyError
[$sel:rawSystemId:TraceStateTenantIdIsEmptyError] :: TraceStateTenantIdIsEmptyError -> Text
[$sel:rawValue:TraceStateTenantIdIsEmptyError] :: TraceStateTenantIdIsEmptyError -> Text
data TraceStateTenantIdContainsInvalidCharsError
TraceStateTenantIdContainsInvalidCharsError :: Text -> Text -> Text -> Text -> TraceStateTenantIdContainsInvalidCharsError
[$sel:rawTenantId:TraceStateTenantIdContainsInvalidCharsError] :: TraceStateTenantIdContainsInvalidCharsError -> Text
[$sel:rawSystemId:TraceStateTenantIdContainsInvalidCharsError] :: TraceStateTenantIdContainsInvalidCharsError -> Text
[$sel:rawValue:TraceStateTenantIdContainsInvalidCharsError] :: TraceStateTenantIdContainsInvalidCharsError -> Text
[$sel:invalidChars:TraceStateTenantIdContainsInvalidCharsError] :: TraceStateTenantIdContainsInvalidCharsError -> Text
data TraceStateSystemIdIsEmptyError
TraceStateSystemIdIsEmptyError :: Text -> Text -> TraceStateSystemIdIsEmptyError
[$sel:rawSystemId:TraceStateSystemIdIsEmptyError] :: TraceStateSystemIdIsEmptyError -> Text
[$sel:rawValue:TraceStateSystemIdIsEmptyError] :: TraceStateSystemIdIsEmptyError -> Text
data TraceStateSystemIdContainsInvalidCharsError
TraceStateSystemIdContainsInvalidCharsError :: Text -> Text -> Text -> Text -> TraceStateSystemIdContainsInvalidCharsError
[$sel:rawTenantId:TraceStateSystemIdContainsInvalidCharsError] :: TraceStateSystemIdContainsInvalidCharsError -> Text
[$sel:rawSystemId:TraceStateSystemIdContainsInvalidCharsError] :: TraceStateSystemIdContainsInvalidCharsError -> Text
[$sel:rawValue:TraceStateSystemIdContainsInvalidCharsError] :: TraceStateSystemIdContainsInvalidCharsError -> Text
[$sel:invalidChars:TraceStateSystemIdContainsInvalidCharsError] :: TraceStateSystemIdContainsInvalidCharsError -> Text
data TraceStateSimpleKeyTooLongError
TraceStateSimpleKeyTooLongError :: Key Text -> Text -> TraceStateSimpleKeyTooLongError
[$sel:rawKey:TraceStateSimpleKeyTooLongError] :: TraceStateSimpleKeyTooLongError -> Key Text
[$sel:rawValue:TraceStateSimpleKeyTooLongError] :: TraceStateSimpleKeyTooLongError -> Text
data TraceStateTenantIdTooLongError
TraceStateTenantIdTooLongError :: Text -> Text -> Text -> TraceStateTenantIdTooLongError
[$sel:rawTenantId:TraceStateTenantIdTooLongError] :: TraceStateTenantIdTooLongError -> Text
[$sel:rawSystemId:TraceStateTenantIdTooLongError] :: TraceStateTenantIdTooLongError -> Text
[$sel:rawValue:TraceStateTenantIdTooLongError] :: TraceStateTenantIdTooLongError -> Text
data TraceStateSystemIdTooLongError
TraceStateSystemIdTooLongError :: Text -> Text -> Text -> TraceStateSystemIdTooLongError
[$sel:rawTenantId:TraceStateSystemIdTooLongError] :: TraceStateSystemIdTooLongError -> Text
[$sel:rawSystemId:TraceStateSystemIdTooLongError] :: TraceStateSystemIdTooLongError -> Text
[$sel:rawValue:TraceStateSystemIdTooLongError] :: TraceStateSystemIdTooLongError -> Text
data TraceStateKeyTypeUnknownError
TraceStateKeyTypeUnknownError :: Key Text -> Text -> TraceStateKeyTypeUnknownError
[$sel:rawKey:TraceStateKeyTypeUnknownError] :: TraceStateKeyTypeUnknownError -> Key Text
[$sel:rawValue:TraceStateKeyTypeUnknownError] :: TraceStateKeyTypeUnknownError -> Text
newtype TraceStateValueIsEmptyError
TraceStateValueIsEmptyError :: Key Text -> TraceStateValueIsEmptyError
[$sel:rawKey:TraceStateValueIsEmptyError] :: TraceStateValueIsEmptyError -> Key Text
data TraceStateValueContainsInvalidCharsError
TraceStateValueContainsInvalidCharsError :: Key Text -> Text -> Text -> TraceStateValueContainsInvalidCharsError
[$sel:rawKey:TraceStateValueContainsInvalidCharsError] :: TraceStateValueContainsInvalidCharsError -> Key Text
[$sel:rawValue:TraceStateValueContainsInvalidCharsError] :: TraceStateValueContainsInvalidCharsError -> Text
[$sel:invalidChars:TraceStateValueContainsInvalidCharsError] :: TraceStateValueContainsInvalidCharsError -> Text
data TraceStateValueTooLongError
TraceStateValueTooLongError :: Key Text -> Text -> TraceStateValueTooLongError
[$sel:rawKey:TraceStateValueTooLongError] :: TraceStateValueTooLongError -> Key Text
[$sel:rawValue:TraceStateValueTooLongError] :: TraceStateValueTooLongError -> Text
instance GHC.Show.Show OTel.API.Trace.Core.TraceState.Errors.TraceStateSimpleKeyIsEmptyError
instance GHC.Classes.Eq OTel.API.Trace.Core.TraceState.Errors.TraceStateSimpleKeyIsEmptyError
instance GHC.Show.Show OTel.API.Trace.Core.TraceState.Errors.TraceStateSimpleKeyContainsInvalidCharsError
instance GHC.Classes.Eq OTel.API.Trace.Core.TraceState.Errors.TraceStateSimpleKeyContainsInvalidCharsError
instance GHC.Show.Show OTel.API.Trace.Core.TraceState.Errors.TraceStateTenantIdIsEmptyError
instance GHC.Classes.Eq OTel.API.Trace.Core.TraceState.Errors.TraceStateTenantIdIsEmptyError
instance GHC.Show.Show OTel.API.Trace.Core.TraceState.Errors.TraceStateTenantIdContainsInvalidCharsError
instance GHC.Classes.Eq OTel.API.Trace.Core.TraceState.Errors.TraceStateTenantIdContainsInvalidCharsError
instance GHC.Show.Show OTel.API.Trace.Core.TraceState.Errors.TraceStateSystemIdIsEmptyError
instance GHC.Classes.Eq OTel.API.Trace.Core.TraceState.Errors.TraceStateSystemIdIsEmptyError
instance GHC.Show.Show OTel.API.Trace.Core.TraceState.Errors.TraceStateSystemIdContainsInvalidCharsError
instance GHC.Classes.Eq OTel.API.Trace.Core.TraceState.Errors.TraceStateSystemIdContainsInvalidCharsError
instance GHC.Show.Show OTel.API.Trace.Core.TraceState.Errors.TraceStateSimpleKeyTooLongError
instance GHC.Classes.Eq OTel.API.Trace.Core.TraceState.Errors.TraceStateSimpleKeyTooLongError
instance GHC.Show.Show OTel.API.Trace.Core.TraceState.Errors.TraceStateTenantIdTooLongError
instance GHC.Classes.Eq OTel.API.Trace.Core.TraceState.Errors.TraceStateTenantIdTooLongError
instance GHC.Show.Show OTel.API.Trace.Core.TraceState.Errors.TraceStateSystemIdTooLongError
instance GHC.Classes.Eq OTel.API.Trace.Core.TraceState.Errors.TraceStateSystemIdTooLongError
instance GHC.Show.Show OTel.API.Trace.Core.TraceState.Errors.TraceStateKeyTypeUnknownError
instance GHC.Classes.Eq OTel.API.Trace.Core.TraceState.Errors.TraceStateKeyTypeUnknownError
instance GHC.Show.Show OTel.API.Trace.Core.TraceState.Errors.TraceStateValueIsEmptyError
instance GHC.Classes.Eq OTel.API.Trace.Core.TraceState.Errors.TraceStateValueIsEmptyError
instance GHC.Show.Show OTel.API.Trace.Core.TraceState.Errors.TraceStateValueContainsInvalidCharsError
instance GHC.Classes.Eq OTel.API.Trace.Core.TraceState.Errors.TraceStateValueContainsInvalidCharsError
instance GHC.Show.Show OTel.API.Trace.Core.TraceState.Errors.TraceStateValueTooLongError
instance GHC.Classes.Eq OTel.API.Trace.Core.TraceState.Errors.TraceStateValueTooLongError
instance GHC.Show.Show OTel.API.Trace.Core.TraceState.Errors.TraceStateError
instance GHC.Classes.Eq OTel.API.Trace.Core.TraceState.Errors.TraceStateError
instance GHC.Exception.Type.Exception OTel.API.Trace.Core.TraceState.Errors.TraceStateErrors
instance GHC.Show.Show OTel.API.Trace.Core.TraceState.Errors.TraceStateErrors
instance GHC.Classes.Eq OTel.API.Trace.Core.TraceState.Errors.TraceStateErrors

module OTel.API.Trace.Core.Internal
trace_ :: (MonadTracing m, HasCallStack) => SpanSpec -> m a -> m a
trace :: (MonadTracing m, HasCallStack) => SpanSpec -> (MutableSpan -> m a) -> m a
class (Monad m) => MonadTracing m
traceCS :: MonadTracing m => CallStack -> SpanSpec -> (MutableSpan -> m a) -> m a
getSpanContext :: MonadTracing m => MutableSpan -> m SpanContext
updateSpan :: MonadTracing m => MutableSpan -> UpdateSpanSpec -> m ()
traceCS :: (MonadTracing m, MonadTransControl t, MonadTracing n, m ~ t n) => CallStack -> SpanSpec -> (MutableSpan -> m a) -> m a
getSpanContext :: (MonadTracing m, MonadTrans t, MonadTracing n, m ~ t n) => MutableSpan -> m SpanContext
updateSpan :: (MonadTracing m, MonadTrans t, MonadTracing n, m ~ t n) => MutableSpan -> UpdateSpanSpec -> m ()
class (MonadTracing m, MonadIO m) => MonadTracingIO m
askTracerIO :: MonadTracingIO m => m Tracer
askTracerIO :: (MonadTracingIO m, MonadTrans t, MonadTracingIO n, m ~ t n) => m Tracer
data TracerProvider
TracerProvider :: (InstrumentationScope -> IO Tracer) -> IO () -> IO () -> TracerProvider
[tracerProviderGetTracer] :: TracerProvider -> InstrumentationScope -> IO Tracer
[tracerProviderShutdown] :: TracerProvider -> IO ()
[tracerProviderForceFlush] :: TracerProvider -> IO ()
data Tracer
Tracer :: InstrumentationScope -> IO Timestamp -> (CallStack -> Context -> SpanSpec -> IO (MutableSpan, [Pair])) -> (Span Attrs -> IO ()) -> AttrsLimits 'AttrsForSpan -> AttrsLimits 'AttrsForSpanEvent -> AttrsLimits 'AttrsForSpanLink -> Tracer
[tracerInstrumentationScope] :: Tracer -> InstrumentationScope
[tracerNow] :: Tracer -> IO Timestamp
[tracerStartSpan] :: Tracer -> CallStack -> Context -> SpanSpec -> IO (MutableSpan, [Pair])
[tracerProcessSpan] :: Tracer -> Span Attrs -> IO ()
[tracerSpanAttrsLimits] :: Tracer -> AttrsLimits 'AttrsForSpan
[tracerSpanEventAttrsLimits] :: Tracer -> AttrsLimits 'AttrsForSpanEvent
[tracerSpanLinkAttrsLimits] :: Tracer -> AttrsLimits 'AttrsForSpanLink
contextBackendSpan :: ContextBackend MutableSpan
contextKeySpan :: ContextKey MutableSpan
data SpanContext
SpanContext :: TraceId -> SpanId -> TraceFlags -> TraceState -> Bool -> SpanContext
[spanContextTraceId] :: SpanContext -> TraceId
[spanContextSpanId] :: SpanContext -> SpanId
[spanContextTraceFlags] :: SpanContext -> TraceFlags
[spanContextTraceState] :: SpanContext -> TraceState
[spanContextIsRemote] :: SpanContext -> Bool
emptySpanContext :: SpanContext
spanContextIsValid :: SpanContext -> Bool
spanContextIsSampled :: SpanContext -> Bool
data TraceId
TraceId :: Word64 -> Word64 -> TraceId
[traceIdHi] :: TraceId -> Word64
[traceIdLo] :: TraceId -> Word64
traceIdToHexText :: TraceId -> Text
traceIdToBytesVector :: TraceId -> Vector Word8
traceIdToHexBuilder :: TraceId -> Builder
traceIdToBytesBuilder :: TraceId -> Builder
emptyTraceId :: TraceId
traceIdFromWords :: Word64 -> Word64 -> TraceId
newtype SpanId
SpanId :: Word64 -> SpanId
[spanIdLo] :: SpanId -> Word64
spanIdToHexText :: SpanId -> Text
spanIdToBytesVector :: SpanId -> Vector Word8
spanIdToHexBuilder :: SpanId -> Builder
spanIdToBytesBuilder :: SpanId -> Builder
emptySpanId :: SpanId
spanIdFromWords :: Word64 -> SpanId
newtype TraceFlags
TraceFlags :: Word8 -> TraceFlags
[unTraceFlags] :: TraceFlags -> Word8
traceFlagsToHexText :: TraceFlags -> Text
traceFlagsToHexBuilder :: TraceFlags -> Builder
traceFlagsSampled :: TraceFlags
isSampledFlagSet :: TraceFlags -> Bool
newtype TraceState
TraceState :: HashMap Text Text -> TraceState
[unTraceState] :: TraceState -> HashMap Text Text
emptyTraceState :: TraceState
nullTraceState :: TraceState -> Bool
sizeTraceState :: TraceState -> Int
memberTraceState :: Key Text -> TraceState -> Bool
lookupTraceState :: Key Text -> TraceState -> Maybe Text
findWithDefaultTraceState :: Text -> Key Text -> TraceState -> Text
deleteTraceState :: Key Text -> TraceState -> TraceState
filterTraceState :: (Text -> Bool) -> TraceState -> TraceState
filterWithKeyTraceState :: (Key Text -> Text -> Bool) -> TraceState -> TraceState
foldMapWithKeyTraceState :: forall m. Monoid m => (Key Text -> Text -> m) -> TraceState -> m
toListTraceState :: TraceState -> [(Key Text, Text)]
newtype TraceStateBuilder a
TraceStateBuilder :: Either (DList TraceStateError) a -> TraceStateBuilder a
[unTraceStateBuilder] :: TraceStateBuilder a -> Either (DList TraceStateError) a
buildTraceState :: forall m. MonadThrow m => TraceStateBuilder TraceState -> m TraceState
buildTraceStatePure :: TraceStateBuilder TraceState -> Either TraceStateErrors TraceState
newtype SpanEvents (attrs :: AttrsFor -> Type)
SpanEvents :: DList (SpanEvent attrs) -> SpanEvents (attrs :: AttrsFor -> Type)
[unSpanEvents] :: SpanEvents (attrs :: AttrsFor -> Type) -> DList (SpanEvent attrs)
spanEventsFromList :: [SpanEvent attrs] -> SpanEvents attrs
spanEventsToList :: SpanEvents attrs -> [SpanEvent attrs]
freezeAllSpanEventAttrs :: AttrsLimits 'AttrsForSpanEvent -> SpanEvents AttrsBuilder -> SpanEvents Attrs
data SpanEvent (attrs :: AttrsFor -> Type)
SpanEvent :: SpanEventName -> Timestamp -> attrs 'AttrsForSpanEvent -> SpanEvent (attrs :: AttrsFor -> Type)
[spanEventName] :: SpanEvent (attrs :: AttrsFor -> Type) -> SpanEventName
[spanEventTimestamp] :: SpanEvent (attrs :: AttrsFor -> Type) -> Timestamp
[spanEventAttrs] :: SpanEvent (attrs :: AttrsFor -> Type) -> attrs 'AttrsForSpanEvent
freezeSpanEventAttrs :: AttrsLimits 'AttrsForSpanEvent -> SpanEvent AttrsBuilder -> SpanEvent Attrs
newtype SpanEventSpecs
SpanEventSpecs :: DList SpanEventSpec -> SpanEventSpecs
[unSpanEventSpecs] :: SpanEventSpecs -> DList SpanEventSpec
singletonSpanEventSpecs :: SpanEventSpec -> SpanEventSpecs
spanEventSpecsFromList :: [SpanEventSpec] -> SpanEventSpecs
spanEventSpecsToList :: SpanEventSpecs -> [SpanEventSpec]
data SpanEventSpec
SpanEventSpec :: SpanEventName -> TimestampSource -> AttrsBuilder 'AttrsForSpanEvent -> SpanEventSpec
[spanEventSpecName] :: SpanEventSpec -> SpanEventName
[spanEventSpecTimestamp] :: SpanEventSpec -> TimestampSource
[spanEventSpecAttrs] :: SpanEventSpec -> AttrsBuilder 'AttrsForSpanEvent
defaultSpanEventSpec :: SpanEventSpec
newtype SpanEventName
SpanEventName :: Text -> SpanEventName
[unSpanEventName] :: SpanEventName -> Text
newtype SpanLinks (attrs :: AttrsFor -> Type)
SpanLinks :: DList (SpanLink attrs) -> SpanLinks (attrs :: AttrsFor -> Type)
[unSpanLinks] :: SpanLinks (attrs :: AttrsFor -> Type) -> DList (SpanLink attrs)
spanLinksFromList :: [SpanLink attrs] -> SpanLinks attrs
spanLinksToList :: SpanLinks attrs -> [SpanLink attrs]
freezeAllSpanLinkAttrs :: AttrsLimits 'AttrsForSpanLink -> SpanLinks AttrsBuilder -> SpanLinks Attrs
newtype SpanLinkSpecs
SpanLinkSpecs :: DList SpanLinkSpec -> SpanLinkSpecs
[unSpanLinkSpecs] :: SpanLinkSpecs -> DList SpanLinkSpec
singletonSpanLinkSpecs :: SpanLinkSpec -> SpanLinkSpecs
spanLinkSpecsFromList :: [SpanLinkSpec] -> SpanLinkSpecs
spanLinkSpecsToList :: SpanLinkSpecs -> [SpanLinkSpec]
data SpanLink (attrs :: AttrsFor -> Type)
SpanLink :: SpanContext -> attrs 'AttrsForSpanLink -> SpanLink (attrs :: AttrsFor -> Type)
[spanLinkSpanContext] :: SpanLink (attrs :: AttrsFor -> Type) -> SpanContext
[spanLinkAttrs] :: SpanLink (attrs :: AttrsFor -> Type) -> attrs 'AttrsForSpanLink
freezeSpanLinkAttrs :: AttrsLimits 'AttrsForSpanLink -> SpanLink AttrsBuilder -> SpanLink Attrs
newtype SpanLinkName
SpanLinkName :: Text -> SpanLinkName
[unSpanLinkName] :: SpanLinkName -> Text
data SpanLinkSpec
SpanLinkSpec :: SpanContext -> AttrsBuilder 'AttrsForSpanLink -> SpanLinkSpec
[spanLinkSpecSpanContext] :: SpanLinkSpec -> SpanContext
[spanLinkSpecAttrs] :: SpanLinkSpec -> AttrsBuilder 'AttrsForSpanLink
defaultSpanLinkSpec :: SpanLinkSpec
data SpanSpec
SpanSpec :: SpanName -> Maybe Context -> TimestampSource -> SpanKind -> AttrsBuilder 'AttrsForSpan -> SpanLinkSpecs -> SpanSpec
[spanSpecName] :: SpanSpec -> SpanName
[spanSpecParentContext] :: SpanSpec -> Maybe Context
[spanSpecStart] :: SpanSpec -> TimestampSource
[spanSpecKind] :: SpanSpec -> SpanKind
[spanSpecAttrs] :: SpanSpec -> AttrsBuilder 'AttrsForSpan
[spanSpecLinks] :: SpanSpec -> SpanLinkSpecs
defaultSpanSpec :: SpanSpec
data UpdateSpanSpec
UpdateSpanSpec :: Maybe SpanName -> Maybe SpanStatus -> Maybe (AttrsBuilder 'AttrsForSpan) -> Maybe SpanEventSpecs -> UpdateSpanSpec
[updateSpanSpecName] :: UpdateSpanSpec -> Maybe SpanName
[updateSpanSpecStatus] :: UpdateSpanSpec -> Maybe SpanStatus
[updateSpanSpecAttrs] :: UpdateSpanSpec -> Maybe (AttrsBuilder 'AttrsForSpan)
[updateSpanSpecEvents] :: UpdateSpanSpec -> Maybe SpanEventSpecs
defaultUpdateSpanSpec :: UpdateSpanSpec
buildSpanUpdater :: forall m. Monad m => m Timestamp -> UpdateSpanSpec -> m (Span AttrsBuilder -> Span AttrsBuilder)
recordException :: SomeException -> Bool -> TimestampSource -> AttrsBuilder 'AttrsForSpanEvent -> UpdateSpanSpec
exceptionEvent :: SomeException -> Bool -> TimestampSource -> AttrsBuilder 'AttrsForSpanEvent -> SpanEventSpec
newtype SpanName
SpanName :: Text -> SpanName
[unSpanName] :: SpanName -> Text
newtype MutableSpan
MutableSpan :: IORef (Span AttrsBuilder) -> MutableSpan
[unMutableSpan] :: MutableSpan -> IORef (Span AttrsBuilder)
unsafeNewMutableSpan :: Span AttrsBuilder -> IO MutableSpan
unsafeReadMutableSpan :: MutableSpan -> IO (Span AttrsBuilder)
unsafeModifyMutableSpan :: MutableSpan -> (Span AttrsBuilder -> (Span AttrsBuilder, a)) -> IO a
data Span (attrs :: AttrsFor -> Type)
Span :: SpanLineage -> SpanContext -> SpanName -> SpanStatus -> Timestamp -> SpanFrozenAt attrs -> SpanKind -> attrs 'AttrsForSpan -> SpanLinks attrs -> SpanEvents attrs -> Bool -> InstrumentationScope -> Span (attrs :: AttrsFor -> Type)
[spanLineage] :: Span (attrs :: AttrsFor -> Type) -> SpanLineage
[spanContext] :: Span (attrs :: AttrsFor -> Type) -> SpanContext
[spanName] :: Span (attrs :: AttrsFor -> Type) -> SpanName
[spanStatus] :: Span (attrs :: AttrsFor -> Type) -> SpanStatus
[spanStart] :: Span (attrs :: AttrsFor -> Type) -> Timestamp
[spanFrozenAt] :: Span (attrs :: AttrsFor -> Type) -> SpanFrozenAt attrs
[spanKind] :: Span (attrs :: AttrsFor -> Type) -> SpanKind
[spanAttrs] :: Span (attrs :: AttrsFor -> Type) -> attrs 'AttrsForSpan
[spanLinks] :: Span (attrs :: AttrsFor -> Type) -> SpanLinks attrs
[spanEvents] :: Span (attrs :: AttrsFor -> Type) -> SpanEvents attrs
[spanIsRecording] :: Span (attrs :: AttrsFor -> Type) -> Bool
[spanInstrumentationScope] :: Span (attrs :: AttrsFor -> Type) -> InstrumentationScope
spanIsRemote :: Span attrs -> Bool
spanIsSampled :: Span attrs -> Bool
spanIsRoot :: Span attrs -> Bool
spanIsChildOf :: Span attrs -> Span attrs -> Bool
type family SpanFrozenAt (attrs :: AttrsFor -> Type) :: Type
data SpanFrozenTimestamp
SpanFrozenTimestampFrozen :: Timestamp -> SpanFrozenTimestamp
SpanFrozenTimestampEnded :: Timestamp -> SpanFrozenTimestamp
frozenTimestamp :: SpanFrozenTimestamp -> Timestamp
freezeSpan :: Timestamp -> AttrsLimits 'AttrsForSpanLink -> AttrsLimits 'AttrsForSpanEvent -> AttrsLimits 'AttrsForSpan -> Span AttrsBuilder -> Span Attrs
data SpanLineage
SpanLineageRoot :: SpanLineage
SpanLineageChildOf :: SpanContext -> SpanLineage
data SpanKind
SpanKindServer :: SpanKind
SpanKindClient :: SpanKind
SpanKindProducer :: SpanKind
SpanKindConsumer :: SpanKind
SpanKindInternal :: SpanKind
data SpanStatus
SpanStatusUnset :: SpanStatus
SpanStatusError :: Text -> SpanStatus
SpanStatusOk :: SpanStatus
instance GHC.Classes.Eq OTel.API.Trace.Core.Internal.TraceId
instance GHC.Classes.Eq OTel.API.Trace.Core.Internal.SpanId
instance GHC.Base.Monoid OTel.API.Trace.Core.Internal.TraceFlags
instance GHC.Base.Semigroup OTel.API.Trace.Core.Internal.TraceFlags
instance GHC.Show.Show OTel.API.Trace.Core.Internal.TraceFlags
instance GHC.Classes.Eq OTel.API.Trace.Core.Internal.TraceFlags
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Trace.Core.Internal.TraceState
instance GHC.Show.Show OTel.API.Trace.Core.Internal.TraceState
instance GHC.Classes.Eq OTel.API.Trace.Core.Internal.TraceState
instance GHC.Show.Show OTel.API.Trace.Core.Internal.SpanContext
instance GHC.Classes.Eq OTel.API.Trace.Core.Internal.SpanContext
instance GHC.Base.Monoid a => GHC.Base.Monoid (OTel.API.Trace.Core.Internal.TraceStateBuilder a)
instance GHC.Base.Semigroup a => GHC.Base.Semigroup (OTel.API.Trace.Core.Internal.TraceStateBuilder a)
instance GHC.Base.Functor OTel.API.Trace.Core.Internal.TraceStateBuilder
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Trace.Core.Internal.SpanEventName
instance GHC.Show.Show OTel.API.Trace.Core.Internal.SpanEventName
instance GHC.Classes.Eq OTel.API.Trace.Core.Internal.SpanEventName
instance GHC.Base.Semigroup OTel.API.Trace.Core.Internal.SpanEventSpecs
instance GHC.Base.Monoid OTel.API.Trace.Core.Internal.SpanEventSpecs
instance GHC.Show.Show OTel.API.Trace.Core.Internal.SpanLinkName
instance GHC.Classes.Eq OTel.API.Trace.Core.Internal.SpanLinkName
instance GHC.Base.Semigroup OTel.API.Trace.Core.Internal.SpanLinkSpecs
instance GHC.Base.Monoid OTel.API.Trace.Core.Internal.SpanLinkSpecs
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Trace.Core.Internal.SpanName
instance GHC.Show.Show OTel.API.Trace.Core.Internal.SpanName
instance GHC.Classes.Eq OTel.API.Trace.Core.Internal.SpanName
instance GHC.Show.Show OTel.API.Trace.Core.Internal.SpanFrozenTimestamp
instance GHC.Classes.Eq OTel.API.Trace.Core.Internal.SpanFrozenTimestamp
instance GHC.Show.Show OTel.API.Trace.Core.Internal.SpanLineage
instance GHC.Classes.Eq OTel.API.Trace.Core.Internal.SpanLineage
instance GHC.Show.Show OTel.API.Trace.Core.Internal.SpanKind
instance GHC.Classes.Eq OTel.API.Trace.Core.Internal.SpanKind
instance GHC.Show.Show OTel.API.Trace.Core.Internal.SpanStatus
instance GHC.Classes.Eq OTel.API.Trace.Core.Internal.SpanStatus
instance GHC.Classes.Eq (attrs 'OTel.API.Common.Internal.AttrsForSpanEvent) => GHC.Classes.Eq (OTel.API.Trace.Core.Internal.SpanEvents attrs)
instance GHC.Show.Show (attrs 'OTel.API.Common.Internal.AttrsForSpanEvent) => GHC.Show.Show (OTel.API.Trace.Core.Internal.SpanEvents attrs)
instance GHC.Base.Monoid (OTel.API.Trace.Core.Internal.SpanEvents attrs)
instance GHC.Base.Semigroup (OTel.API.Trace.Core.Internal.SpanEvents attrs)
instance GHC.Classes.Eq (attrs 'OTel.API.Common.Internal.AttrsForSpanEvent) => GHC.Classes.Eq (OTel.API.Trace.Core.Internal.SpanEvent attrs)
instance GHC.Show.Show (attrs 'OTel.API.Common.Internal.AttrsForSpanEvent) => GHC.Show.Show (OTel.API.Trace.Core.Internal.SpanEvent attrs)
instance GHC.Classes.Eq (attrs 'OTel.API.Common.Internal.AttrsForSpanLink) => GHC.Classes.Eq (OTel.API.Trace.Core.Internal.SpanLinks attrs)
instance GHC.Show.Show (attrs 'OTel.API.Common.Internal.AttrsForSpanLink) => GHC.Show.Show (OTel.API.Trace.Core.Internal.SpanLinks attrs)
instance GHC.Base.Monoid (OTel.API.Trace.Core.Internal.SpanLinks attrs)
instance GHC.Base.Semigroup (OTel.API.Trace.Core.Internal.SpanLinks attrs)
instance GHC.Classes.Eq (attrs 'OTel.API.Common.Internal.AttrsForSpanLink) => GHC.Classes.Eq (OTel.API.Trace.Core.Internal.SpanLink attrs)
instance GHC.Show.Show (attrs 'OTel.API.Common.Internal.AttrsForSpanLink) => GHC.Show.Show (OTel.API.Trace.Core.Internal.SpanLink attrs)
instance GHC.Classes.Eq (OTel.API.Trace.Core.Internal.Span OTel.API.Common.Internal.Attrs)
instance GHC.Show.Show (OTel.API.Trace.Core.Internal.Span OTel.API.Common.Internal.Attrs)
instance OTel.API.Trace.Core.Internal.MonadTracingIO m => OTel.API.Trace.Core.Internal.MonadTracingIO (Control.Monad.Trans.Except.ExceptT e m)
instance OTel.API.Trace.Core.Internal.MonadTracingIO m => OTel.API.Trace.Core.Internal.MonadTracingIO (Control.Monad.Trans.Identity.IdentityT m)
instance OTel.API.Trace.Core.Internal.MonadTracingIO m => OTel.API.Trace.Core.Internal.MonadTracingIO (Control.Monad.Trans.Maybe.MaybeT m)
instance OTel.API.Trace.Core.Internal.MonadTracingIO m => OTel.API.Trace.Core.Internal.MonadTracingIO (Control.Monad.Trans.Reader.ReaderT r m)
instance OTel.API.Trace.Core.Internal.MonadTracingIO m => OTel.API.Trace.Core.Internal.MonadTracingIO (Control.Monad.Trans.State.Lazy.StateT r m)
instance OTel.API.Trace.Core.Internal.MonadTracingIO m => OTel.API.Trace.Core.Internal.MonadTracingIO (Control.Monad.Trans.State.Strict.StateT r m)
instance (OTel.API.Trace.Core.Internal.MonadTracingIO m, GHC.Base.Monoid w) => OTel.API.Trace.Core.Internal.MonadTracingIO (Control.Monad.Trans.RWS.Lazy.RWST r w s m)
instance (OTel.API.Trace.Core.Internal.MonadTracingIO m, GHC.Base.Monoid w) => OTel.API.Trace.Core.Internal.MonadTracingIO (Control.Monad.Trans.RWS.Strict.RWST r w s m)
instance (OTel.API.Trace.Core.Internal.MonadTracingIO m, GHC.Base.Monoid w) => OTel.API.Trace.Core.Internal.MonadTracingIO (Control.Monad.Trans.Writer.Lazy.WriterT w m)
instance (OTel.API.Trace.Core.Internal.MonadTracingIO m, GHC.Base.Monoid w) => OTel.API.Trace.Core.Internal.MonadTracingIO (Control.Monad.Trans.Writer.Strict.WriterT w m)
instance OTel.API.Trace.Core.Internal.MonadTracingIO m => OTel.API.Trace.Core.Internal.MonadTracingIO (Control.Monad.Logger.LoggingT m)
instance (OTel.API.Trace.Core.Internal.MonadTracingIO m, Control.Monad.IO.Unlift.MonadUnliftIO m) => OTel.API.Trace.Core.Internal.MonadTracingIO (Control.Monad.Trans.Resource.Internal.ResourceT m)
instance OTel.API.Trace.Core.Internal.MonadTracing m => OTel.API.Trace.Core.Internal.MonadTracing (Control.Monad.Trans.Except.ExceptT e m)
instance OTel.API.Trace.Core.Internal.MonadTracing m => OTel.API.Trace.Core.Internal.MonadTracing (Control.Monad.Trans.Identity.IdentityT m)
instance OTel.API.Trace.Core.Internal.MonadTracing m => OTel.API.Trace.Core.Internal.MonadTracing (Control.Monad.Trans.Maybe.MaybeT m)
instance OTel.API.Trace.Core.Internal.MonadTracing m => OTel.API.Trace.Core.Internal.MonadTracing (Control.Monad.Trans.Reader.ReaderT r m)
instance OTel.API.Trace.Core.Internal.MonadTracing m => OTel.API.Trace.Core.Internal.MonadTracing (Control.Monad.Trans.State.Lazy.StateT r m)
instance OTel.API.Trace.Core.Internal.MonadTracing m => OTel.API.Trace.Core.Internal.MonadTracing (Control.Monad.Trans.State.Strict.StateT r m)
instance (OTel.API.Trace.Core.Internal.MonadTracing m, GHC.Base.Monoid w) => OTel.API.Trace.Core.Internal.MonadTracing (Control.Monad.Trans.RWS.Lazy.RWST r w s m)
instance (OTel.API.Trace.Core.Internal.MonadTracing m, GHC.Base.Monoid w) => OTel.API.Trace.Core.Internal.MonadTracing (Control.Monad.Trans.RWS.Strict.RWST r w s m)
instance (OTel.API.Trace.Core.Internal.MonadTracing m, GHC.Base.Monoid w) => OTel.API.Trace.Core.Internal.MonadTracing (Control.Monad.Trans.Writer.Lazy.WriterT w m)
instance (OTel.API.Trace.Core.Internal.MonadTracing m, GHC.Base.Monoid w) => OTel.API.Trace.Core.Internal.MonadTracing (Control.Monad.Trans.Writer.Strict.WriterT w m)
instance OTel.API.Trace.Core.Internal.MonadTracing m => OTel.API.Trace.Core.Internal.MonadTracing (Control.Monad.Logger.LoggingT m)
instance (OTel.API.Trace.Core.Internal.MonadTracing m, Control.Monad.IO.Unlift.MonadUnliftIO m) => OTel.API.Trace.Core.Internal.MonadTracing (Control.Monad.Trans.Resource.Internal.ResourceT m)
instance Data.String.IsString OTel.API.Trace.Core.Internal.UpdateSpanSpec
instance OTel.API.Common.Internal.WithAttrs OTel.API.Trace.Core.Internal.UpdateSpanSpec
instance Data.Aeson.Types.ToJSON.ToJSON (OTel.API.Trace.Core.Internal.Span OTel.API.Common.Internal.Attrs)
instance GHC.Classes.Ord OTel.API.Trace.Core.Internal.SpanStatus
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Trace.Core.Internal.SpanStatus
instance Data.String.IsString OTel.API.Trace.Core.Internal.SpanSpec
instance OTel.API.Common.Internal.WithAttrs OTel.API.Trace.Core.Internal.SpanSpec
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Trace.Core.Internal.SpanKind
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Trace.Core.Internal.SpanLineage
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Trace.Core.Internal.SpanFrozenTimestamp
instance Data.String.IsString OTel.API.Trace.Core.Internal.SpanName
instance OTel.API.Common.Internal.WithAttrs OTel.API.Trace.Core.Internal.SpanLinkSpec
instance Data.String.IsString OTel.API.Trace.Core.Internal.SpanLinkName
instance Data.Aeson.Types.ToJSON.ToJSON (OTel.API.Trace.Core.Internal.SpanLinks OTel.API.Common.Internal.Attrs)
instance Data.Aeson.Types.ToJSON.ToJSON (OTel.API.Trace.Core.Internal.SpanLink OTel.API.Common.Internal.Attrs)
instance Data.Aeson.Types.ToJSON.ToJSON (OTel.API.Trace.Core.Internal.SpanEvents OTel.API.Common.Internal.Attrs)
instance Data.Aeson.Types.ToJSON.ToJSON (OTel.API.Trace.Core.Internal.SpanEvent OTel.API.Common.Internal.Attrs)
instance Data.String.IsString OTel.API.Trace.Core.Internal.SpanEventSpec
instance OTel.API.Common.Internal.WithAttrs OTel.API.Trace.Core.Internal.SpanEventSpec
instance Data.String.IsString OTel.API.Trace.Core.Internal.SpanEventName
instance GHC.Base.Applicative OTel.API.Trace.Core.Internal.TraceStateBuilder
instance OTel.API.Common.Internal.KV (OTel.API.Trace.Core.Internal.TraceStateBuilder OTel.API.Trace.Core.Internal.TraceState)
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Trace.Core.Internal.SpanContext
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Trace.Core.Internal.TraceFlags
instance GHC.Show.Show OTel.API.Trace.Core.Internal.SpanId
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Trace.Core.Internal.SpanId
instance GHC.Show.Show OTel.API.Trace.Core.Internal.TraceId
instance Data.Aeson.Types.ToJSON.ToJSON OTel.API.Trace.Core.Internal.TraceId

module OTel.API.Trace.Core.TraceState
data TraceState
emptyTraceState :: TraceState
nullTraceState :: TraceState -> Bool
sizeTraceState :: TraceState -> Int
memberTraceState :: Key Text -> TraceState -> Bool
lookupTraceState :: Key Text -> TraceState -> Maybe Text
findWithDefaultTraceState :: Text -> Key Text -> TraceState -> Text
deleteTraceState :: Key Text -> TraceState -> TraceState
filterTraceState :: (Text -> Bool) -> TraceState -> TraceState
filterWithKeyTraceState :: (Key Text -> Text -> Bool) -> TraceState -> TraceState
foldMapWithKeyTraceState :: forall m. Monoid m => (Key Text -> Text -> m) -> TraceState -> m
toListTraceState :: TraceState -> [(Key Text, Text)]
data TraceStateBuilder a
buildTraceState :: forall m. MonadThrow m => TraceStateBuilder TraceState -> m TraceState
buildTraceStatePure :: TraceStateBuilder TraceState -> Either TraceStateErrors TraceState

module OTel.API.Trace.Core.TraceId
data TraceId
traceIdToHexText :: TraceId -> Text
traceIdToBytesVector :: TraceId -> Vector Word8
traceIdToHexBuilder :: TraceId -> Builder
traceIdToBytesBuilder :: TraceId -> Builder
emptyTraceId :: TraceId
traceIdFromWords :: Word64 -> Word64 -> TraceId

module OTel.API.Trace.Core.TraceFlags
data TraceFlags
traceFlagsToHexText :: TraceFlags -> Text
traceFlagsToHexBuilder :: TraceFlags -> Builder
traceFlagsSampled :: TraceFlags
isSampledFlagSet :: TraceFlags -> Bool

module OTel.API.Trace.Core.SpanId
data SpanId
spanIdToHexText :: SpanId -> Text
spanIdToBytesVector :: SpanId -> Vector Word8
spanIdToHexBuilder :: SpanId -> Builder
spanIdToBytesBuilder :: SpanId -> Builder
emptySpanId :: SpanId
spanIdFromWords :: Word64 -> SpanId

module OTel.API.Trace.Core.SpanContext
data SpanContext
emptySpanContext :: SpanContext
spanContextTraceId :: SpanContext -> TraceId
spanContextSpanId :: SpanContext -> SpanId
spanContextTraceFlags :: SpanContext -> TraceFlags
spanContextTraceState :: SpanContext -> TraceState
spanContextIsRemote :: SpanContext -> Bool
spanContextIsValid :: SpanContext -> Bool
spanContextIsSampled :: SpanContext -> Bool

module OTel.API.Trace.Core.Span
data MutableSpan
data Span (attrs :: AttrsFor -> Type)
spanLineage :: Span attrs -> SpanLineage
spanContext :: Span attrs -> SpanContext
spanName :: Span attrs -> SpanName
spanStatus :: Span attrs -> SpanStatus
spanStart :: Span attrs -> Timestamp
spanFrozenAt :: Span attrs -> SpanFrozenAt attrs
spanKind :: Span attrs -> SpanKind
spanAttrs :: Span attrs -> attrs 'AttrsForSpan
spanLinks :: Span attrs -> SpanLinks attrs
spanEvents :: Span attrs -> SpanEvents attrs
spanIsRecording :: Span attrs -> Bool
spanInstrumentationScope :: Span attrs -> InstrumentationScope
spanIsRemote :: Span attrs -> Bool
spanIsSampled :: Span attrs -> Bool
spanIsRoot :: Span attrs -> Bool
spanIsChildOf :: Span attrs -> Span attrs -> Bool
newtype SpanName
SpanName :: Text -> SpanName
[unSpanName] :: SpanName -> Text
data SpanLineage
SpanLineageRoot :: SpanLineage
SpanLineageChildOf :: SpanContext -> SpanLineage
data SpanKind
SpanKindServer :: SpanKind
SpanKindClient :: SpanKind
SpanKindProducer :: SpanKind
SpanKindConsumer :: SpanKind
SpanKindInternal :: SpanKind
data SpanStatus
SpanStatusUnset :: SpanStatus
SpanStatusError :: Text -> SpanStatus
SpanStatusOk :: SpanStatus
type family SpanFrozenAt (attrs :: AttrsFor -> Type) :: Type
data SpanFrozenTimestamp
SpanFrozenTimestampFrozen :: Timestamp -> SpanFrozenTimestamp
SpanFrozenTimestampEnded :: Timestamp -> SpanFrozenTimestamp
frozenTimestamp :: SpanFrozenTimestamp -> Timestamp
data SpanSpec
defaultSpanSpec :: SpanSpec
spanSpecName :: SpanSpec -> SpanName
spanSpecParentContext :: SpanSpec -> Maybe Context
spanSpecStart :: SpanSpec -> TimestampSource
spanSpecKind :: SpanSpec -> SpanKind
spanSpecAttrs :: SpanSpec -> AttrsBuilder 'AttrsForSpan
spanSpecLinks :: SpanSpec -> SpanLinkSpecs
data UpdateSpanSpec
defaultUpdateSpanSpec :: UpdateSpanSpec
updateSpanSpecName :: UpdateSpanSpec -> Maybe SpanName
updateSpanSpecStatus :: UpdateSpanSpec -> Maybe SpanStatus
updateSpanSpecAttrs :: UpdateSpanSpec -> Maybe (AttrsBuilder 'AttrsForSpan)
updateSpanSpecEvents :: UpdateSpanSpec -> Maybe SpanEventSpecs
recordException :: SomeException -> Bool -> TimestampSource -> AttrsBuilder 'AttrsForSpanEvent -> UpdateSpanSpec
exceptionEvent :: SomeException -> Bool -> TimestampSource -> AttrsBuilder 'AttrsForSpanEvent -> SpanEventSpec
data SpanEvents (attrs :: AttrsFor -> Type)
spanEventsFromList :: [SpanEvent attrs] -> SpanEvents attrs
spanEventsToList :: SpanEvents attrs -> [SpanEvent attrs]
data SpanEvent (attrs :: AttrsFor -> Type)
SpanEvent :: SpanEventName -> Timestamp -> attrs 'AttrsForSpanEvent -> SpanEvent (attrs :: AttrsFor -> Type)
[spanEventName] :: SpanEvent (attrs :: AttrsFor -> Type) -> SpanEventName
[spanEventTimestamp] :: SpanEvent (attrs :: AttrsFor -> Type) -> Timestamp
[spanEventAttrs] :: SpanEvent (attrs :: AttrsFor -> Type) -> attrs 'AttrsForSpanEvent
newtype SpanEventName
SpanEventName :: Text -> SpanEventName
[unSpanEventName] :: SpanEventName -> Text
data SpanEventSpecs
singletonSpanEventSpecs :: SpanEventSpec -> SpanEventSpecs
spanEventSpecsFromList :: [SpanEventSpec] -> SpanEventSpecs
spanEventSpecsToList :: SpanEventSpecs -> [SpanEventSpec]
data SpanEventSpec
defaultSpanEventSpec :: SpanEventSpec
spanEventSpecName :: SpanEventSpec -> SpanEventName
spanEventSpecTimestamp :: SpanEventSpec -> TimestampSource
spanEventSpecAttrs :: SpanEventSpec -> AttrsBuilder 'AttrsForSpanEvent
data SpanLinks (attrs :: AttrsFor -> Type)
spanLinksFromList :: [SpanLink attrs] -> SpanLinks attrs
spanLinksToList :: SpanLinks attrs -> [SpanLink attrs]
data SpanLink (attrs :: AttrsFor -> Type)
SpanLink :: SpanContext -> attrs 'AttrsForSpanLink -> SpanLink (attrs :: AttrsFor -> Type)
[spanLinkSpanContext] :: SpanLink (attrs :: AttrsFor -> Type) -> SpanContext
[spanLinkAttrs] :: SpanLink (attrs :: AttrsFor -> Type) -> attrs 'AttrsForSpanLink
newtype SpanLinkName
SpanLinkName :: Text -> SpanLinkName
[unSpanLinkName] :: SpanLinkName -> Text
data SpanLinkSpecs
singletonSpanLinkSpecs :: SpanLinkSpec -> SpanLinkSpecs
spanLinkSpecsFromList :: [SpanLinkSpec] -> SpanLinkSpecs
spanLinkSpecsToList :: SpanLinkSpecs -> [SpanLinkSpec]
data SpanLinkSpec
defaultSpanLinkSpec :: SpanLinkSpec
spanLinkSpecSpanContext :: SpanLinkSpec -> SpanContext
spanLinkSpecAttrs :: SpanLinkSpec -> AttrsBuilder 'AttrsForSpanLink

module OTel.API.Trace.Core.Context
contextBackendSpan :: ContextBackend MutableSpan
contextKeySpan :: ContextKey MutableSpan

module OTel.API.Trace.Core.Class
trace_ :: (MonadTracing m, HasCallStack) => SpanSpec -> m a -> m a
trace :: (MonadTracing m, HasCallStack) => SpanSpec -> (MutableSpan -> m a) -> m a
class (Monad m) => MonadTracing m
traceCS :: MonadTracing m => CallStack -> SpanSpec -> (MutableSpan -> m a) -> m a
getSpanContext :: MonadTracing m => MutableSpan -> m SpanContext
updateSpan :: MonadTracing m => MutableSpan -> UpdateSpanSpec -> m ()
traceCS :: (MonadTracing m, MonadTransControl t, MonadTracing n, m ~ t n) => CallStack -> SpanSpec -> (MutableSpan -> m a) -> m a
getSpanContext :: (MonadTracing m, MonadTrans t, MonadTracing n, m ~ t n) => MutableSpan -> m SpanContext
updateSpan :: (MonadTracing m, MonadTrans t, MonadTracing n, m ~ t n) => MutableSpan -> UpdateSpanSpec -> m ()
class (MonadTracing m, MonadIO m) => MonadTracingIO m
askTracerIO :: MonadTracingIO m => m Tracer
askTracerIO :: (MonadTracingIO m, MonadTrans t, MonadTracingIO n, m ~ t n) => m Tracer

module OTel.API.Trace.Core
data TracerProvider
data Tracer
(.@) :: (KV kv, KVConstraints kv from to) => Key to -> from -> kv
infixr 8 .@
